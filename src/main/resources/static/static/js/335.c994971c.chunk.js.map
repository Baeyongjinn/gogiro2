{"version":3,"file":"static/js/335.c994971c.chunk.js","mappings":"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","sources":["api/MyApi.js","components/common/ResultModal.js","components/common/SelectedModal.js","components/community/styles/AddStyle.js","components/community/Modify.js","pages/community/ModifyPage.js"],"sourcesContent":["import axios from \"axios\";\r\nimport authAxios from \"../util/tokenUtil\";\r\n\r\nexport const API_SERVER_HOST = \"\";\r\nconst host = `${API_SERVER_HOST}/api`;\r\n\r\n// 마이페이지 : 예약 내역 가져오기 (GET)\r\nexport const getMyBook = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.get(`${host}/user/reservation`, {\r\n      params: param,\r\n    });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"예약 내역 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"예약 내역 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 예약 내역 변경하기 (PUT)\r\nexport const putMyBook = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.put(`${host}/user/reservation`, {\r\n      params: param,\r\n    });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"예약 변경 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"예약 변경 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 예약 내역 삭제하기 (PATCH) 안됨.....ㅎㅎ\r\nexport const patchMyBook = async ({\r\n  deleteBook,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.patch(\r\n      `${host}/user/reservation/`,\r\n      deleteBook,\r\n      header,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"예약 내역 삭제 성공\");\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"예약 내역 삭제 오류\");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"서버 오류\");\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 마이페이지 : 리뷰 내역 가져오기 (GET)\r\nexport const getMyReview = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.get(`${host}/user/review`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"리뷰 내역 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"리뷰 내역 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 북마크 내역 가져오기 (GET)\r\nexport const getMyList = async ({ param, successFn, failFn, errorFn }) => {\r\n  console.log(\"parameter :\", param);\r\n  try {\r\n    const res = await authAxios.get(`${host}/user/bookmark`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"북마크 내역 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"북마크 내역 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 유저 정보 가져오기 (GET)\r\nexport const getUserInfo = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.get(`${host}/user`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"유저 정보 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"유저 정보 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 유저 정보 수정하기 (PUT) 안됨 ㅎㅎ\r\nexport const putUserInfo = async ({ userData, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await authAxios.put(`${host}/user`, userData, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"유저 정보 수정 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"유저 정보 수정 오류\", res.statusText);\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    if (error.response) {\r\n      console.log(\"서버 응답 오류\", error.response.data);\r\n      errorFn(\"유저 정보 수정 서버 오류: \", error.response.data);\r\n    } else {\r\n      errorFn(\"유저 정보 수정 서버 오류\");\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭시 콜백 함수\r\nconst ResultModal = ({ title, content, callFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div onClick={callFn}>\r\n          <Button bttext=\"확인\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultModal;\r\n","import React from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭시 콜백 함수\r\nconst SelectedModal = ({ title, content, confirmFn, cancelFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            gap: \"20px\",\r\n          }}\r\n        >\r\n          <div onClick={confirmFn}>\r\n            <Button bttext=\"확인\" />\r\n          </div>\r\n          <div onClick={cancelFn}>\r\n            <Button bttext=\"취소\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedModal;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const AddBoxStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 20px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  align-self: stretch;\r\n  .titleBox {\r\n    display: flex;\r\n    padding: 10px;\r\n    align-items: center;\r\n    gap: 10px;\r\n    flex: 1 0 0;\r\n    color: ${ColorStyle.g900};\r\n    font-size: ${FontSize.strong};\r\n    font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  }\r\n  .inputBox {\r\n    display: flex;\r\n    width: 1036px;\r\n    align-items: flex-start;\r\n    align-self: stretch;\r\n    input {\r\n      appearance: none;\r\n      padding: 10px;\r\n      width: 100%;\r\n      /* min-width: 220px; */\r\n      height: 100%;\r\n      border: 1px solid ${ColorStyle.g500};\r\n      background: #fff;\r\n      font-size: ${FontSize.default};\r\n      /* color: ${ColorStyle.g500}; */\r\n    }\r\n  }\r\n`;\r\nexport const UserBoxStyle = styled(AddBoxStyle)`\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  .writerBox {\r\n    display: flex;\r\n    width: 1036px;\r\n    height: 44px;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    font-size: ${FontSize.default};\r\n    color: ${ColorStyle.g500};\r\n    /* font-family: \"DAEAM_LEE_TAE_JOON\"; */\r\n  }\r\n`;\r\nexport const ContentBoxStyle = styled(AddBoxStyle)`\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  .inputBox {\r\n    display: flex;\r\n    width: 1036px;\r\n    align-items: flex-start;\r\n    align-self: stretch;\r\n    textarea {\r\n      padding: 10px;\r\n      width: 100%;\r\n      min-height: 100px;\r\n      resize: vertical;\r\n      font-size: ${FontSize.default};\r\n      border-top: 1px solid ${ColorStyle.g500};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ImageBoxStyle = styled(AddBoxStyle)`\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  .inputBox {\r\n    display: flex;\r\n    width: 930px;\r\n    align-items: flex-start;\r\n    align-self: stretch;\r\n    input {\r\n      appearance: none;\r\n      padding: 10px;\r\n      width: 100%;\r\n      min-width: 220px;\r\n      height: 100%;\r\n      border: 0px solid ${ColorStyle.g500};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FootStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 50px 0px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n  align-self: stretch;\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  .btnBox {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 20px;\r\n    flex: 1 0 0;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { API_SERVER_HOST } from \"../../api/config\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getOne, putOne } from \"../../api/communityApi\";\r\nimport { useEffect } from \"react\";\r\nimport { getUserInfo } from \"../../api/MyApi\";\r\nimport { useRef } from \"react\";\r\nimport { WrapStyle } from \"./styles/ListStyle\";\r\nimport Fetching from \"../common/Fetching\";\r\nimport {\r\n  AddBoxStyle,\r\n  ContentBoxStyle,\r\n  FootStyle,\r\n  ImageBoxStyle,\r\n  UserBoxStyle,\r\n} from \"./styles/AddStyle\";\r\nimport Button from \"../button/Button\";\r\nimport SelectedModal from \"../common/SelectedModal\";\r\nimport ResultModal from \"../common/ResultModal\";\r\n\r\nconst host = API_SERVER_HOST;\r\n\r\n// 해당 글 수정을 위한 기존 글 정보 초기값\r\nconst initState = {\r\n  iboard: 0,\r\n  iuser: 0,\r\n  name: \"\",\r\n  writerPic: \"\",\r\n  title: \"\",\r\n  contents: \"\",\r\n  createdAt: \"\",\r\n  pics: [],\r\n  beAf: [\r\n    {\r\n      iboard: 0,\r\n      title: \"\",\r\n    },\r\n  ],\r\n  comments: [\r\n    {\r\n      icomment: 0,\r\n      writerPk: 0,\r\n      writerName: \"\",\r\n      comment: \"\",\r\n      createdAt: \"\",\r\n    },\r\n  ],\r\n};\r\n\r\n// 유저 정보 초기값\r\nconst initProfile = {\r\n  nickname: \"\",\r\n};\r\n\r\nconst Modify = () => {\r\n  // 커스텀 훅\r\n  const { moveToRead, moveToList, moveToModify, page } = useCustomMove();\r\n  // 로딩창\r\n  const [fetching, setFetching] = useState(false);\r\n  // 해당 글 pk값 추출 및 할당(get)\r\n  const { iboard } = useParams();\r\n  // 해당 글 기존 내용 상태 가져오기 및 업데이트(get)\r\n  const [product, setProduct] = useState(initState);\r\n  // 해당 글 작성자 닉네임 정보 상태 업데이트\r\n  const [profileData, setProfileData] = useState(initProfile);\r\n  // 업로드 할 이미지 미리보기 상태 업데이트\r\n  const [images, setImages] = useState([]);\r\n  // 교체할 이미지 상태 업데이트\r\n  const [replaceImg, setReplaceImg] = useState(null);\r\n  // 이미지 삭제 정보를 담을 상태\r\n  const [deletedImageIds, setDeletedImageIds] = useState([]);\r\n  // useRef(DOM 요소를 참조한다.)\r\n  // useRef를 만든 후 반드 시 태그랑 연결\r\n  const uploadRef = useRef(null);\r\n\r\n  // selectedModal 띄우기 위한 상태 업데이트\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // API 통신 결과 상태 업데이트\r\n  const [result, setResult] = useState(false);\r\n  // resultModal props 값 업데이트\r\n  const [popTitle, setPopTitle] = useState(\"\");\r\n  const [popContent, setPopContent] = useState(\"\");\r\n  // Modal 닫기 이후 화면 전환 상태 업데이트\r\n  const [popRedirect, setPopRedirect] = useState(false);\r\n\r\n  // ----------------------------------------------------------------------\r\n\r\n  // 해당 글 작성자 닉네임 정보 가져오기\r\n  useEffect(() => {\r\n    const param = {};\r\n    getUserInfo({\r\n      param,\r\n      successFn: successFnProfile,\r\n      failFn: failFnProfile,\r\n      errorFn: errorFnProfile,\r\n    });\r\n  }, []);\r\n\r\n  const successFnProfile = result => {\r\n    setProfileData(result);\r\n    console.log(result);\r\n  };\r\n  const failFnProfile = result => {\r\n    console.log(result);\r\n  };\r\n  const errorFnProfile = result => {\r\n    console.log(result);\r\n  };\r\n\r\n  // 커뮤니티 해당 글 정보 가져오기(get)\r\n  const getOneData = () => {\r\n    getOne({ iboard, successFn, failFn, errorFn });\r\n  };\r\n  const successFn = result => {\r\n    setFetching(false);\r\n    setProduct(result);\r\n    console.log(result);\r\n  };\r\n  const failFn = result => {\r\n    setFetching(false);\r\n    console.log(result);\r\n  };\r\n  const errorFn = result => {\r\n    setFetching(false);\r\n    console.log(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFetching(true);\r\n    getOneData();\r\n  }, [iboard, page]);\r\n\r\n  useEffect(() => {\r\n    // 기존 이미지 URL 초기화\r\n    const initialImages = product.pics.map(pic => ({\r\n      url: `${host}/pic/community/${product.iboard}/${pic.pic}`,\r\n      icommuPics: pic.icommuPics,\r\n    }));\r\n    setImages(initialImages);\r\n  }, [product.pics, product.iboard]);\r\n\r\n  // 이미지 미리보기 삭제 함수\r\n  const deleteImage = indexToDelete => {\r\n    // images 배열에서 이미지 삭제\r\n    const imageToDelete = images[indexToDelete];\r\n    if (imageToDelete.icommuPics) {\r\n      setDeletedImageIds(prevIds => [...prevIds, imageToDelete.icommuPics]);\r\n    }\r\n    setImages(prevImages =>\r\n      prevImages.filter((_, index) => index !== indexToDelete),\r\n    );\r\n  };\r\n\r\n  // 업로드 할 이미지 미리보기 및 교체\r\n  const handleFileChange = e => {\r\n    const files = e.target.files;\r\n    if (files) {\r\n      const totalImages = images.length + files.length;\r\n      if (totalImages > 5) {\r\n        alert(\"최대 5장까지만 업로드 가능합니다.\");\r\n        return;\r\n      }\r\n\r\n      Array.from(files).forEach(file => {\r\n        const previewUrl = URL.createObjectURL(file);\r\n        setImages(prevImages => [\r\n          ...prevImages,\r\n          { url: previewUrl, file, isNew: true },\r\n        ]);\r\n      });\r\n    }\r\n  };\r\n\r\n  // 글 작성 시 내용 업데이트\r\n  const handleChange = e => {\r\n    product[e.target.name] = e.target.value;\r\n    setProduct({ ...product });\r\n  };\r\n  // 사진추가 버튼 클릭시 이미지 파일 선택\r\n  const handleClickImg = () => {\r\n    if (images.length > 5) {\r\n      alert(\"더 이상 이미지를 추가할 수 없습니다.\");\r\n      return;\r\n    }\r\n    uploadRef.current.click();\r\n  };\r\n\r\n  // 해당 글 수정 실행\r\n  const handleClickModify = async product => {\r\n    // const files = uploadRef.current.files;\r\n    // console.log(\"파일업로드 할때 이미지 배열 요소 개수\", files.length);\r\n    const formData = new FormData();\r\n    // dto 객체 생성 및 Blob으로 변환\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          iboard: product.iboard,\r\n          icommuPics: deletedImageIds,\r\n          title: product.title,\r\n          contents: product.contents,\r\n          files: product.files,\r\n        }),\r\n      ],\r\n      { type: \"application/json\" },\r\n    );\r\n    // dto 객체를 FormData에 추가\r\n    formData.append(\"dto\", dto);\r\n\r\n    // 새로운 이미지만 FormData에 추가\r\n    Array.from(uploadRef.current.files).forEach(file => {\r\n      formData.append(\"pics\", file);\r\n    });\r\n\r\n    // 글 정보 전송하기\r\n    setFetching(true);\r\n    try {\r\n      await putOne({\r\n        product: formData,\r\n        successFn: successFnModify,\r\n        failFn: failFnModify,\r\n        errorFn: errorFnModify,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"글 수정 중 에러 발생\", error);\r\n    } finally {\r\n      setFetching(false);\r\n    }\r\n  };\r\n\r\n  const successFnModify = result => {\r\n    console.log(\"글 수정 성공\", result);\r\n    setFetching(false);\r\n    setResult(true);\r\n    setPopTitle(\"글 수정\");\r\n    setPopContent(\"글 수정 성공하였습니다.\");\r\n    setPopRedirect(true);\r\n  };\r\n  const failFnModify = result => {\r\n    console.log(\"글 수정 실패\", result);\r\n    setFetching(false);\r\n    setResult(false);\r\n    setPopTitle(\"글 수정 실패\");\r\n    setPopContent(\"오류가 발생하였습니다. 잠시 후 다시 시도해주세요\");\r\n    setPopRedirect(false);\r\n  };\r\n  const errorFnModify = result => {\r\n    console.log(\"글 수정 실패\", result);\r\n    setFetching(false);\r\n    setResult(true);\r\n    setPopTitle(\"서버 오류\");\r\n    setPopContent(\"서버가 불안정합니다. 관리자에게 문의해주세요.\");\r\n    setPopRedirect(false);\r\n  };\r\n\r\n  // 확인 버튼 클릭 시\r\n  const handleConfirm = product => {\r\n    // 글 등록 로직 실행\r\n    handleClickModify(product);\r\n    // 모달 닫기\r\n    setShowModal(false);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    // 모달창 닫기\r\n    setResult(false);\r\n    moveToList({ page: 1 });\r\n  };\r\n  // 취소 버튼 클릭 시\r\n  const handleCancel = () => {\r\n    // 모달 닫기\r\n    setShowModal(false);\r\n  };\r\n\r\n  // 글 등록 버튼 클릭 핸들러\r\n  const handleAddClick = () => {\r\n    // 모달 띄우기\r\n    setShowModal(true);\r\n  };\r\n\r\n  return (\r\n    <WrapStyle>\r\n      {fetching ? <Fetching /> : null}\r\n      <AddBoxStyle>\r\n        <div className=\"titleBox\">제목</div>\r\n        <div className=\"inputBox\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            onChange={e => handleChange(e)}\r\n            value={product.title}\r\n          />\r\n        </div>\r\n      </AddBoxStyle>\r\n      <UserBoxStyle>\r\n        <div className=\"titleBox\">작성자</div>\r\n        <div className=\"writerBox\">{profileData.nickname}</div>\r\n      </UserBoxStyle>\r\n      <ContentBoxStyle>\r\n        <div className=\"titleBox\">내용</div>\r\n        <div className=\"inputBox\">\r\n          <textarea\r\n            type=\"text\"\r\n            name=\"contents\"\r\n            onChange={e => handleChange(e)}\r\n            value={product.contents}\r\n          />\r\n        </div>\r\n      </ContentBoxStyle>\r\n      <ImageBoxStyle>\r\n        <div className=\"titleBox\">사진</div>\r\n\r\n        <div onClick={handleClickImg}>\r\n          <Button bttext=\"사진추가\" />\r\n        </div>\r\n        <div className=\"inputBox\">\r\n          <input\r\n            type=\"file\"\r\n            ref={uploadRef}\r\n            multiple={true}\r\n            style={{ display: \"none\" }}\r\n            onChange={handleFileChange}\r\n          />\r\n          <div className=\"previewBox\">\r\n            {images.map((image, index) => (\r\n              <img\r\n                key={index}\r\n                src={image.url}\r\n                alt={`미리보기${index}`}\r\n                style={{\r\n                  maxWidth: \"60px\",\r\n                  margin: \"5px\",\r\n                  cursor: \"pointer\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                onClick={() => deleteImage(index)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </ImageBoxStyle>\r\n      <FootStyle>\r\n        <div className=\"btnBox\">\r\n          <div onClick={handleAddClick}>\r\n            <Button bttext=\"확인\" />\r\n          </div>\r\n          <div onClick={moveToList}>\r\n            <Button bttext=\"취소\" />\r\n          </div>\r\n        </div>\r\n      </FootStyle>\r\n      {showModal ? (\r\n        <SelectedModal\r\n          title=\"글 수정 확인\"\r\n          content=\"글을 수정하시겠습니까?\"\r\n          confirmFn={() => handleConfirm(product)}\r\n          cancelFn={handleCancel}\r\n        />\r\n      ) : null}\r\n      {result ? (\r\n        <ResultModal\r\n          title={popTitle}\r\n          content={popContent}\r\n          callFn={closeModal}\r\n        />\r\n      ) : null}\r\n    </WrapStyle>\r\n  );\r\n};\r\n\r\nexport default Modify;\r\n","import React from \"react\";\r\nimport Modify from \"../../components/community/Modify\";\r\n\r\nconst ModifyPage = () => {\r\n  return (\r\n    <div>\r\n      <Modify />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModifyPage;\r\n"],"names":["host","concat","getMyBook","async","param","successFn","failFn","errorFn","_ref","res","authAxios","get","params","status","toString","charAt","console","log","data","error","patchMyBook","deleteBook","_ref3","header","headers","patch","getMyReview","_ref4","getMyList","_ref5","getUserInfo","_ref6","putUserInfo","userData","_ref7","put","statusText","response","title","content","callFn","_jsx","style","position","display","alignItems","justifyContent","left","top","width","height","background","zIndex","children","_jsxs","textAlign","flexDirection","gap","padding","borderRadius","fontFamily","fontSize","paddingBottom","borderBottom","onClick","Button","bttext","confirmFn","cancelFn","AddBoxStyle","styled","div","_templateObject","_taggedTemplateLiteral","ColorStyle","g900","FontSize","strong","g500","default","UserBoxStyle","_templateObject2","ContentBoxStyle","_templateObject3","ImageBoxStyle","_templateObject4","FootStyle","_templateObject5","API_SERVER_HOST","initState","iboard","iuser","name","writerPic","contents","createdAt","pics","beAf","comments","icomment","writerPk","writerName","comment","initProfile","nickname","Modify","moveToRead","moveToList","moveToModify","page","useCustomMove","fetching","setFetching","useState","useParams","product","setProduct","profileData","setProfileData","images","setImages","replaceImg","setReplaceImg","deletedImageIds","setDeletedImageIds","uploadRef","useRef","showModal","setShowModal","result","setResult","popTitle","setPopTitle","popContent","setPopContent","popRedirect","setPopRedirect","useEffect","successFnProfile","failFnProfile","errorFnProfile","getOne","initialImages","map","pic","url","icommuPics","handleChange","e","target","value","successFnModify","failFnModify","errorFnModify","handleConfirm","formData","FormData","dto","Blob","JSON","stringify","files","type","append","Array","from","current","forEach","file","putOne","handleClickModify","WrapStyle","Fetching","className","onChange","handleClickImg","length","alert","click","ref","multiple","previewUrl","URL","createObjectURL","prevImages","isNew","image","index","src","alt","maxWidth","margin","cursor","indexToDelete","imageToDelete","prevIds","filter","_","deleteImage","handleAddClick","SelectedModal","handleCancel","ResultModal","closeModal","ModifyPage"],"sourceRoot":""}