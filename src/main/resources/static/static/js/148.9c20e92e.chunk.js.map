{"version":3,"file":"static/js/148.9c20e92e.chunk.js","mappings":"sLAqGA,QAhGA,WACE,MAAOA,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,OAClCC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,KAC1BG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,OAC9BK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,IACxCO,EAAaC,IAAkBR,EAAAA,EAAAA,UAAS,IAOzCS,EAAcC,MAAMC,KAAK,CAAEC,OAAQ,KAAM,CAACC,EAAGC,KAAC,CAClDC,MAAOD,EAAI,EACXE,MAAOC,OAAOH,EAAI,GAAGI,SAAS,EAAG,SAC/BC,QAAO,CAACC,EAAQC,KAClB,GAAiB,OAAbvB,EACF,OAAOsB,EAAOL,OAASV,GAAee,EAAOL,OAAS,GAGtD,OADiBK,EAAOL,MAAQ,GAAM,IACpBR,CACpB,IAGIe,EAAgBZ,MAAMC,KAAK,CAAEC,OAAQ,KAAM,CAACC,EAAGC,KAAC,CACpDC,MAAOD,EACPE,MAAOC,OAAOH,GAAGI,SAAS,EAAG,SASzBK,EAAe,CACnBC,QAASA,CAACC,EAAMC,KAAA,IAAE,UAAEC,EAAS,WAAEC,GAAYF,EAAA,MAAM,IAC5CD,EACHI,OAAQF,GAAaC,EAAa,sBAAwB,OAC1DE,UAAWH,EAAY,oBAAsB,KAC7C,UAAW,CACTE,OAAQ,uBAEX,EACDE,KAAMN,IAAM,IAAUA,EAAQO,OAAQ,MACtCC,YAAaA,CAACC,EAAUC,KAAK,IACxBD,EACHE,WAAY,qBACZC,SAAU,SAEZjB,OAAQA,CAACc,EAAUC,KAAK,IACnBD,EACHE,WAAY,qBACZC,SAAU,SAEZC,YAAaA,CAACJ,EAAUC,KAAK,IACxBD,EACHE,WAAY,qBACZC,SAAU,UAId,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,QA3DgB,CACtB,CAAE7B,MAAO,KAAMC,MAAO,gBACtB,CAAED,MAAO,KAAMC,MAAO,iBA0DhBsB,YAAY,4BACZO,SAAUzB,GAAUrB,EAAYqB,EAAOL,OACvC+B,WAAYA,IAAM/C,EAAYD,GAC9B2B,OAAQF,OAGZmB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,QAASnC,EACT6B,YAAY,SACZO,SAAUzB,GAAUlB,EAAQkB,EAAOL,OACnC+B,WAAYA,IAAM5C,EAAQD,GAC1BwB,OAAQF,OAGZmB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,QAAStB,EACTgB,YAAY,SACZO,SAAUzB,GAAUhB,EAAUgB,EAAOL,OACrC+B,WAAYA,IAAM1C,EAAUD,GAC5BsB,OAAQF,OAGZmB,EAAAA,EAAAA,KAAA,UAAQK,QA9DQC,KAClB,MACMC,EAAI,GAAAC,OAAMjC,OADY,OAAbnB,EAAqBG,EAAO,GAAM,GAAKA,EAAO,IAC9BiB,SAAS,EAAG,KAAI,KAAAgC,OAAI/C,GACnDgD,QAAQC,IAAIH,EAAK,EA2DcR,SAAC,sCAGpC,C","sources":["redux/GaraLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"./TimeSelector.css\"; // CSS 파일 추가\r\nimport { FontSize } from \"../styles/common/CommonStyle\";\r\n\r\nfunction TimeSelector() {\r\n  const [meridiem, setMeridiem] = useState(\"AM\");\r\n  const [hour, setHour] = useState(\"\");\r\n  const [minute, setMinute] = useState(\"00\");\r\n  const [openingHour, setOpeningHour] = useState(9);\r\n  const [closingHour, setClosingHour] = useState(20);\r\n\r\n  const meridiemOptions = [\r\n    { value: \"AM\", label: \"오전\" },\r\n    { value: \"PM\", label: \"오후\" },\r\n  ];\r\n\r\n  const hourOptions = Array.from({ length: 12 }, (_, i) => ({\r\n    value: i + 1,\r\n    label: String(i + 1).padStart(2, \"0\"),\r\n  })).filter((option, index) => {\r\n    if (meridiem === \"AM\") {\r\n      return option.value >= openingHour && option.value <= 12;\r\n    } else {\r\n      const value24 = (option.value % 12) + 12;\r\n      return value24 <= closingHour;\r\n    }\r\n  });\r\n\r\n  const minuteOptions = Array.from({ length: 60 }, (_, i) => ({\r\n    value: i,\r\n    label: String(i).padStart(2, \"0\"),\r\n  }));\r\n\r\n  const handlePrint = () => {\r\n    const hour24 = meridiem === \"PM\" ? (hour % 12) + 12 : hour % 12;\r\n    const time = `${String(hour24).padStart(2, \"0\")}-${minute}`;\r\n    console.log(time);\r\n  };\r\n\r\n  const customStyles = {\r\n    control: (styles, { isFocused, isSelected }) => ({\r\n      ...styles,\r\n      border: isFocused || isSelected ? \"1.5px solid #066E52\" : \"none\",\r\n      boxShadow: isFocused ? \"0 0 0 1px #066E52\" : null,\r\n      \"&:hover\": {\r\n        border: \"1.5px solid #066E52\",\r\n      },\r\n    }),\r\n    menu: styles => ({ ...styles, zIndex: 999 }),\r\n    singleValue: (provided, state) => ({\r\n      ...provided,\r\n      fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n      fontSize: \"14px\",\r\n    }),\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n      fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n      fontSize: \"14px\",\r\n    }),\r\n    placeholder: (provided, state) => ({\r\n      ...provided,\r\n      fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n      fontSize: \"14px\",\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div className=\"time-selector\">\r\n      <div className=\"select-box\">\r\n        <Select\r\n          options={meridiemOptions}\r\n          placeholder=\"오전/오후\"\r\n          onChange={option => setMeridiem(option.value)}\r\n          onMenuOpen={() => setMeridiem(meridiem)}\r\n          styles={customStyles}\r\n        />\r\n      </div>\r\n      <div className=\"select-box\">\r\n        <Select\r\n          options={hourOptions}\r\n          placeholder=\"시\"\r\n          onChange={option => setHour(option.value)}\r\n          onMenuOpen={() => setHour(hour)}\r\n          styles={customStyles}\r\n        />\r\n      </div>\r\n      <div className=\"select-box\">\r\n        <Select\r\n          options={minuteOptions}\r\n          placeholder=\"분\"\r\n          onChange={option => setMinute(option.value)}\r\n          onMenuOpen={() => setMinute(minute)}\r\n          styles={customStyles}\r\n        />\r\n      </div>\r\n      <button onClick={handlePrint}>데이터 출력</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeSelector;\r\n"],"names":["meridiem","setMeridiem","useState","hour","setHour","minute","setMinute","openingHour","setOpeningHour","closingHour","setClosingHour","hourOptions","Array","from","length","_","i","value","label","String","padStart","filter","option","index","minuteOptions","customStyles","control","styles","_ref","isFocused","isSelected","border","boxShadow","menu","zIndex","singleValue","provided","state","fontFamily","fontSize","placeholder","_jsxs","className","children","_jsx","Select","options","onChange","onMenuOpen","onClick","handlePrint","time","concat","console","log"],"sourceRoot":""}