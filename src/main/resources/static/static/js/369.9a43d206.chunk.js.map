{"version":3,"file":"static/js/369.9a43d206.chunk.js","mappings":"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","sources":["components/common/ResultModal.js","components/common/SelectedModal.js","components/tag/styles/TagStyle.js","components/tag/Tag.js","components/community/styles/ReadStyle.js","components/community/Read.js","pages/community/ReadPage.js"],"sourcesContent":["import React from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭시 콜백 함수\r\nconst ResultModal = ({ title, content, callFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div onClick={callFn}>\r\n          <Button bttext=\"확인\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultModal;\r\n","import React from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭시 콜백 함수\r\nconst SelectedModal = ({ title, content, confirmFn, cancelFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            gap: \"20px\",\r\n          }}\r\n        >\r\n          <div onClick={confirmFn}>\r\n            <Button bttext=\"확인\" />\r\n          </div>\r\n          <div onClick={cancelFn}>\r\n            <Button bttext=\"취소\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedModal;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const TagStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 3px 5px;\r\n  background: #fff;\r\n  border: 1px solid ${ColorStyle.secondary};\r\n  border-radius: 10px;\r\n  span {\r\n    color: ${ColorStyle.primary};\r\n    font-size: ${FontSize.tag};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { TagStyle } from \"./styles/TagStyle\";\r\n\r\nconst Tag = props => {\r\n  const { tagtext } = props;\r\n\r\n  return (\r\n    <TagStyle>\r\n      <span>{tagtext}</span>\r\n    </TagStyle>\r\n  );\r\n};\r\n\r\nexport default Tag;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const MoreBoxStyle = styled.div`\r\n  position: relative;\r\n  padding: 30px 60px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 50px;\r\n`;\r\n\r\nexport const TitleBoxStyle = styled.div`\r\n  position: relative;\r\n  padding: 30px 20px 20px 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n  align-self: stretch;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.strong};\r\n  border-bottom: 1px solid ${ColorStyle.g500};\r\n  @media (max-width: 980px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const MoreTitleStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const MoreStyle = styled.div`\r\n  position: relative;\r\n  color: ${ColorStyle.g600};\r\n`;\r\n\r\nexport const WriterBoxStyle = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 20px;\r\n  color: ${ColorStyle.g700};\r\n  font-size: ${FontSize.default};\r\n  .viewBox {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n  }\r\n`;\r\n\r\nexport const PrnvContentStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 20px;\r\n  align-items: flex-start;\r\n  gap: 60px;\r\n  align-self: stretch;\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.strong};\r\n  .prnv {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n  }\r\n  .prnvTitle {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    color: ${ColorStyle.g700};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const BtnBoxStyle = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 30px 0px 50px 0px;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  align-self: stretch;\r\n  .editBtn {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 10px;\r\n    flex: 1 0 0;\r\n  }\r\n`;\r\n\r\nexport const ReviewBox = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 20px 20px 50px 20px;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  .readReviewBox {\r\n    display: flex;\r\n    padding-bottom: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    align-self: stretch;\r\n  }\r\n  .readReview {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 15px;\r\n    flex: 1 0 0;\r\n  }\r\n  .reviewInfo {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n    align-self: stretch;\r\n  }\r\n  .reviewCount {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n    align-self: stretch;\r\n    color: ${ColorStyle.secondary};\r\n    font-size: ${FontSize.default};\r\n  }\r\n  .userInfo {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 30px;\r\n    align-self: stretch;\r\n  }\r\n  .user {\r\n    display: flex;\r\n    width: 65px;\r\n    align-items: center;\r\n    gap: 2px;\r\n  }\r\n  .nickName {\r\n    align-items: center;\r\n    flex: 1 0 0;\r\n    color: ${ColorStyle.primary};\r\n    font-size: ${FontSize.default};\r\n  }\r\n  .date {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    flex: 1 0 0;\r\n    color: ${ColorStyle.g500};\r\n    font-size: 11px;\r\n  }\r\n  .reviewContentBox {\r\n    position: relative;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .reviewContent {\r\n    display: flex;\r\n    padding: 0px 10px;\r\n    align-items: center;\r\n    gap: 10px;\r\n    align-self: stretch;\r\n    color: ${ColorStyle.g900};\r\n    font-size: ${FontSize.default};\r\n  }\r\n  .deleteBtn {\r\n    display: flex;\r\n    width: 25px;\r\n    align-items: center;\r\n    gap: 8px;\r\n    font-size: ${FontSize.default};\r\n    color: ${ColorStyle.primary};\r\n    cursor: pointer;\r\n  }\r\n  .inputReviewBox {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding: 20px 0px;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    gap: 13px;\r\n    align-self: stretch;\r\n    border-top: 1px dashed ${ColorStyle.g500};\r\n  }\r\n  .inputReview {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n    flex: 1 0 0;\r\n    align-self: stretch;\r\n    input {\r\n      appearance: none;\r\n      padding: 10px 20px;\r\n      width: 100%;\r\n      min-width: 220px;\r\n      height: 100%;\r\n      border-radius: 10px;\r\n      border: 1px solid ${ColorStyle.g500};\r\n      background: #fff;\r\n      font-size: ${FontSize.default};\r\n      color: ${ColorStyle.g500};\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  deleteComment,\r\n  deleteOne,\r\n  getOne,\r\n  postComment,\r\n} from \"../../api/communityApi\";\r\nimport { API_SERVER_HOST } from \"../../api/config\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Button from \"../button/Button\";\r\nimport Fetching from \"../common/Fetching\";\r\nimport ResultModal from \"../common/ResultModal\";\r\nimport Tag from \"../tag/Tag\";\r\nimport {\r\n  ContentInfoStyle,\r\n  ContentStyle,\r\n  ImgStyle,\r\n  LargeImgStyle,\r\n  NameStyle,\r\n  TagBoxStyle,\r\n  ThumbnailStyle,\r\n  UserStyle,\r\n  WrapStyle,\r\n} from \"./styles/ListStyle\";\r\nimport {\r\n  BtnBoxStyle,\r\n  MoreBoxStyle,\r\n  MoreStyle,\r\n  MoreTitleStyle,\r\n  PrnvContentStyle,\r\n  ReviewBox,\r\n  TitleBoxStyle,\r\n  WriterBoxStyle,\r\n} from \"./styles/ReadStyle\";\r\nimport SelectedModal from \"../common/SelectedModal\";\r\n\r\nconst host = API_SERVER_HOST;\r\n// 서버데이터 초기값\r\nconst initState = {\r\n  iboard: 0,\r\n  iuser: 0,\r\n  name: \"\",\r\n  writerPic: \"\",\r\n  title: \"\",\r\n  contents: \"\",\r\n  createdAt: \"\",\r\n  pics: [],\r\n  beAf: [\r\n    {\r\n      iboard: 0,\r\n      title: \"\",\r\n    },\r\n  ],\r\n  comments: [\r\n    {\r\n      icomment: 0,\r\n      writerPk: 0,\r\n      writerName: \"\",\r\n      comment: \"\",\r\n      createdAt: \"\",\r\n    },\r\n  ],\r\n};\r\n// 댓글 등록을 위한 초기값\r\nconst initComment = {\r\n  contents: \"\",\r\n};\r\n\r\nconst Read = () => {\r\n  // 커스텀 훅\r\n  const { moveToRead, moveToList, moveToModify, page } = useCustomMove();\r\n  // 해당 글 pk값 추출 및 할당(get)\r\n  const { iboard } = useParams();\r\n  // 해당 글 상태 초기화 및 업데이트(get)\r\n  const [content, setContent] = useState(initState);\r\n  // 해당 글에 댓글 작성을 위한 상태 초기화 및 업데이트(post)\r\n  const [contents, setcontents] = useState(initComment);\r\n  // 해당 글의 댓글 상태 초기화 및 업데이트(get)\r\n  const [comments, setComments] = useState([]);\r\n  // 로딩창\r\n  const [fetching, setFetching] = useState(false);\r\n  // 커뮤니티 해당 글 정보 가져오기(get)\r\n  const getOneData = () => {\r\n    getOne({ iboard, successFn, failFn, errorFn });\r\n  };\r\n\r\n  const successFn = result => {\r\n    setFetching(false);\r\n    setContent(result);\r\n    setComments(result.comments);\r\n    console.log(result);\r\n  };\r\n  const failFn = result => {\r\n    setFetching(false);\r\n    console.log(result);\r\n  };\r\n  const errorFn = result => {\r\n    setFetching(false);\r\n    console.log(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFetching(true);\r\n    getOneData();\r\n  }, [iboard, page]);\r\n\r\n  // 커뮤니티 해당 글 이미지 미리보기 관련\r\n  const [selectedImg, setSlectedImg] = useState(content.pics[0]?.pic);\r\n\r\n  // 해당글의 이미지 큰이미지로 보여주기\r\n  // content.pics가 변경될 때마다 실행됩니다.\r\n  useEffect(() => {\r\n    if (content.pics && content.pics.length > 0 && content.pics[0].pic) {\r\n      setSlectedImg(content.pics[0].pic);\r\n    }\r\n  }, [content.pics]);\r\n  // 썸네일 이미지 클릭 시 이미지 상태 업데이트\r\n  const handleThumbnailClick = pic => {\r\n    setSlectedImg(pic);\r\n  };\r\n\r\n  // 댓글 등록 관련\r\n  const handleChange = e => {\r\n    // 댓글 입력 텍스트 필드의 새로고침을 위해 변수에 할당\r\n    const newContents = { ...contents, [e.target.name]: e.target.value };\r\n    setcontents(newContents);\r\n    // 기존 방식\r\n    // contents[e.target.name] = e.target.value;\r\n    // setcontents({ ...contents });\r\n  };\r\n\r\n  // 댓글 등록 함수\r\n  const addComment = () => {\r\n    postComment({\r\n      iboard,\r\n      contents,\r\n      successFn: successFnAdd,\r\n      failFn: failFnAdd,\r\n      errorFn: errorFnAdd,\r\n    });\r\n    console.log(contents);\r\n    console.log(iboard);\r\n  };\r\n  const successFnAdd = result => {\r\n    console.log(result);\r\n    setPopRedirect(1);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 등록\");\r\n    setPopContent(\"댓글을 등록하였습니다.\");\r\n    setcontents({ ...initComment });\r\n    getOneData();\r\n  };\r\n  const failFnAdd = result => {\r\n    console.log(result);\r\n    setPopRedirect(1);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 등록 실패\");\r\n    setPopContent(\"댓글을 등록에 실패하였습니다. 다시 등록 해주세요.\");\r\n  };\r\n  const errorFnAdd = result => {\r\n    console.log(result);\r\n    setPopRedirect(1);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 등록 실패\");\r\n    setPopContent(\"서버가 불안정합니다. 잠시 후 다시 등록 해주세요.\");\r\n  };\r\n\r\n  // 댓글 삭제 관련\r\n  // 댓글 pk값 상태 업데이트\r\n  const [currentCommentId, setCurrentCommentId] = useState(null);\r\n\r\n  // selectedModal 띄우기 위한 상태 업데이트\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // 댓글 삭제 시 해당 pk값으로 상태 업데이트 후\r\n  // 확인 모달창 띄우기\r\n  const handleDelComment = icomment => {\r\n    setCurrentCommentId(icomment);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const successFnDel = result => {\r\n    console.log(\"댓글 삭제 성공\", result);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 삭제\");\r\n    setPopContent(\"댓글을 삭제하였습니다.\");\r\n    setPopRedirect(1);\r\n    getOneData();\r\n  };\r\n  const failFnDel = result => {\r\n    console.log(\"댓글 삭제 실패\", result);\r\n    setResult(false);\r\n    setPopTitle(\"댓글 삭제 실패\");\r\n    setPopContent(\"댓글 삭제에 실패하였습니다. 다시 시도 해주세요.\");\r\n  };\r\n  const errorFnDel = result => {\r\n    console.log(\"댓글 삭제 실패\", result);\r\n    setPopRedirect(1);\r\n    setResult(true);\r\n    setPopTitle(\"댓글 삭제 실패\");\r\n    setPopContent(\"서버가 불안정합니다. 잠시 후 다시 시도 해주세요.\");\r\n  };\r\n\r\n  // 해당 글 pk값 상태 업데이트\r\n  const [currentReadId, setCurrentReadId] = useState(null);\r\n  // selectedModal 을 띄우기 위한 상태 업데이트\r\n  const [showReadModal, setShowReadModal] = useState(false);\r\n  // 해당 글 삭제 시 해당 pk값으로 상태 업데이트 후\r\n  // 확인 모달창 띄우기\r\n  const handleDelRead = iboard => {\r\n    setCurrentReadId(iboard);\r\n    setShowReadModal(true);\r\n  };\r\n\r\n  // 모달창 관련\r\n  const closeModal = () => {\r\n    // 모달창 숨기기\r\n    setResult(false);\r\n  };\r\n  const closeDelReadModal = () => {\r\n    // 모달창 숨기기\r\n    setShowReadModal(false);\r\n    moveToList({ page: page });\r\n  };\r\n  const cancelModal = () => {\r\n    // selectedModal 취소 버튼\r\n    setShowModal(false);\r\n  };\r\n  const cancelReadModal = () => {\r\n    setShowReadModal(false);\r\n  };\r\n\r\n  // selectedModal 확인버튼\r\n  const confirmModal = () => {\r\n    if (currentCommentId) {\r\n      deleteComment({\r\n        icomment: currentCommentId,\r\n        successFn: successFnDel,\r\n        failFn: failFnDel,\r\n        errorFn: errorFnDel,\r\n      });\r\n    }\r\n    setShowModal(false);\r\n  };\r\n\r\n  const confirmReadModal = () => {\r\n    if (currentReadId) {\r\n      deleteOne({\r\n        iboard: currentReadId,\r\n        successFn: successFnReadDel,\r\n        failFn: failFnReadDel,\r\n        errorFn: errorFnReadDel,\r\n      });\r\n    }\r\n    setShowReadModal(false);\r\n  };\r\n\r\n  const successFnReadDel = delReadResult => {\r\n    console.log(\"해당 글 삭제 성공\", delReadResult);\r\n    setDelReadResult(true);\r\n    setPopTitle(\"해당 글 삭제\");\r\n    setPopContent(\"해당 글을 삭제하였습니다.\");\r\n    setPopRedirect(1);\r\n    getOneData();\r\n  };\r\n  const failFnReadDel = delReadResult => {\r\n    console.log(\"해당 글 삭제 실패\", delReadResult);\r\n    setDelReadResult(false);\r\n    setPopTitle(\"해당 글 삭제 실패\");\r\n    setPopContent(\"해당 글 삭제에 실패하였습니다. 다시 시도 해주세요.\");\r\n  };\r\n  const errorFnReadDel = delReadResult => {\r\n    console.log(\"해당 글 삭제 실패\", delReadResult);\r\n    setPopRedirect(1);\r\n    setDelReadResult(true);\r\n    setPopTitle(\"해당 글 삭제 실패\");\r\n    setPopContent(\"서버가 불안정합니다. 잠시 후 다시 시도 해주세요.\");\r\n  };\r\n\r\n  // API 통신 결과 상태 업데이트\r\n  // 댓글 등록 및 삭제 결과 상태 업데이트\r\n  const [result, setResult] = useState(false);\r\n  // 해당 글 삭제 결과 상태 업데이트\r\n  const [delReadResult, setDelReadResult] = useState(false);\r\n  // resultModal props 값 업데이트\r\n  const [popTitle, setPopTitle] = useState(\"\");\r\n  const [popContent, setPopContent] = useState(\"\");\r\n  // Modal 닫기 이후 화면 전환 상태 업데이트\r\n  const [popRedirect, setPopRedirect] = useState(false);\r\n\r\n  return (\r\n    <WrapStyle>\r\n      {fetching ? <Fetching /> : null}\r\n      <TitleBoxStyle>\r\n        <MoreTitleStyle>{content.title}</MoreTitleStyle>\r\n        <WriterBoxStyle>\r\n          <div className=\"userName\">{content.name}</div>\r\n          <div className=\"date\">{content.createdAt}</div>\r\n          <div className=\"viewBox\">\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/assets/images/view_eye.svg`}\r\n              alt=\"img\"\r\n            />\r\n            <div className=\"viewCount\">3574</div>\r\n          </div>\r\n        </WriterBoxStyle>\r\n      </TitleBoxStyle>\r\n      <MoreBoxStyle>\r\n        <ImgStyle>\r\n          <LargeImgStyle>\r\n            <img\r\n              src={`${host}/pic/community/${content.iboard}/${selectedImg}`}\r\n              alt=\"Large image\"\r\n            />\r\n          </LargeImgStyle>\r\n          <ThumbnailStyle>\r\n            {content.pics.map(\r\n              (pic, index) =>\r\n                pic && (\r\n                  <div\r\n                    className=\"thumbnail\"\r\n                    key={index}\r\n                    onClick={() => {\r\n                      handleThumbnailClick(pic.pic);\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={`${host}/pic/community/${content.iboard}/${pic.pic}`}\r\n                      alt={`img_${index + 1}`}\r\n                    />\r\n                  </div>\r\n                ),\r\n            )}\r\n          </ThumbnailStyle>\r\n        </ImgStyle>\r\n        <ContentInfoStyle>\r\n          <ContentStyle>\r\n            <UserStyle>\r\n              <img\r\n                src={`${host}/pic/community/${content.iboard}/${content.writerPic}`}\r\n                alt=\"프로필사진\"\r\n              />\r\n              <NameStyle>\r\n                <div>{content.name}</div>\r\n                <TagBoxStyle>\r\n                  <Tag tagtext=\"#동성로\" />\r\n                  <Tag tagtext=\"#모듬한판\" />\r\n                  <Tag tagtext=\"#퇴근길\" />\r\n                </TagBoxStyle>\r\n              </NameStyle>\r\n            </UserStyle>\r\n            <MoreStyle>{content.contents}</MoreStyle>\r\n          </ContentStyle>\r\n        </ContentInfoStyle>\r\n      </MoreBoxStyle>\r\n      <PrnvContentStyle>\r\n        <div className=\"prnv\">\r\n          <div className=\"prnvIcon\">\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/assets/images/mingcute_up-line.svg`}\r\n              alt=\"img\"\r\n            />\r\n          </div>\r\n          <div className=\"prnvText\">이전글</div>\r\n        </div>\r\n        <div\r\n          className=\"prnvTitle\"\r\n          onClick={() => {\r\n            moveToRead(content.beAf[0].iboard);\r\n          }}\r\n        >\r\n          {content.beAf[0].title}\r\n        </div>\r\n      </PrnvContentStyle>\r\n      <PrnvContentStyle>\r\n        {content.beAf[1] && (\r\n          <>\r\n            <div className=\"prnv\">\r\n              <div className=\"prnvIcon\">\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/assets/images/mingcute_down-line.svg`}\r\n                  alt=\"img\"\r\n                />\r\n              </div>\r\n              <div className=\"prnvText\">다음글</div>\r\n            </div>\r\n            <div\r\n              className=\"prnvTitle\"\r\n              onClick={() => {\r\n                moveToRead(content.beAf[1].iboard);\r\n              }}\r\n            >\r\n              {content.beAf[1].title}\r\n            </div>\r\n          </>\r\n        )}\r\n      </PrnvContentStyle>\r\n      <BtnBoxStyle>\r\n        <div className=\"editBtn\">\r\n          <div\r\n            onClick={() => {\r\n              moveToModify(content.iboard);\r\n            }}\r\n          >\r\n            <Button bttext=\"수정하기\" />\r\n          </div>\r\n          <div\r\n            onClick={() => {\r\n              handleDelRead(content.iboard);\r\n            }}\r\n          >\r\n            <Button bttext=\"삭제하기\" />\r\n          </div>\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            moveToList({ page });\r\n          }}\r\n        >\r\n          <Button bttext=\"목록보기\" />\r\n        </div>\r\n      </BtnBoxStyle>\r\n      <ReviewBox>\r\n        <div className=\"readReviewBox\">\r\n          <div className=\"readReview\">\r\n            <div className=\"reviewInfo\">\r\n              <div className=\"reviewCount\">\r\n                댓글 {content.comments.length}개\r\n              </div>\r\n              {content.comments.length > 0 &&\r\n                content.comments.map(comment => (\r\n                  <>\r\n                    <div className=\"userInfo\" key={comment.icomment}>\r\n                      <div className=\"user\">\r\n                        <div className=\"icon\">\r\n                          <img\r\n                            src={`${process.env.PUBLIC_URL}/assets/images/speech.svg`}\r\n                          />\r\n                        </div>\r\n                        <div className=\"nickName\">{comment.writerName}</div>\r\n                      </div>\r\n                      <div className=\"date\">{comment.createdAt}</div>\r\n                    </div>\r\n                    <div className=\"reviewContentBox\">\r\n                      <div className=\"reviewContent\">{comment.comment}</div>\r\n                      <div\r\n                        className=\"deleteBtn\"\r\n                        onClick={() => {\r\n                          handleDelComment(comment.icomment);\r\n                        }}\r\n                      >\r\n                        삭제\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"inputReviewBox\">\r\n          <div className=\"inputReview\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"contents\"\r\n              value={contents.contents}\r\n              onChange={e => handleChange(e)}\r\n              placeholder=\"댓글을 입력해보세요\"\r\n            />\r\n          </div>\r\n          <div onClick={addComment}>\r\n            <Button bttext=\"댓글입력\" />\r\n          </div>\r\n        </div>\r\n      </ReviewBox>\r\n      {/* 모달창 */}\r\n      {showModal ? (\r\n        <SelectedModal\r\n          title=\"댓글 삭제\"\r\n          content=\"정말 댓글을 삭제하시겠습니까?\"\r\n          confirmFn={confirmModal}\r\n          cancelFn={cancelModal}\r\n        />\r\n      ) : null}\r\n      {showReadModal ? (\r\n        <SelectedModal\r\n          title=\"글 삭제\"\r\n          content=\"정말 해당 글을 삭제하시겠습니까?\"\r\n          confirmFn={confirmReadModal}\r\n          cancelFn={cancelReadModal}\r\n        />\r\n      ) : null}\r\n      {result ? (\r\n        <ResultModal\r\n          title={popTitle}\r\n          content={popContent}\r\n          callFn={closeModal}\r\n        />\r\n      ) : null}\r\n      {delReadResult ? (\r\n        <ResultModal\r\n          title={popTitle}\r\n          content={popContent}\r\n          callFn={closeDelReadModal}\r\n        />\r\n      ) : null}\r\n    </WrapStyle>\r\n  );\r\n};\r\n\r\nexport default Read;\r\n","import React from \"react\";\r\nimport Read from \"../../components/community/Read\";\r\n\r\n// 글 읽기 페이지입니다.\r\nconst ReadPage = () => {\r\n  return (\r\n    <div>\r\n      <Read />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReadPage;\r\n"],"names":["_ref","title","content","callFn","_jsx","style","position","display","alignItems","justifyContent","left","top","width","height","background","zIndex","children","_jsxs","textAlign","flexDirection","gap","padding","borderRadius","fontFamily","fontSize","paddingBottom","borderBottom","onClick","Button","bttext","confirmFn","cancelFn","TagStyle","styled","div","_templateObject","_taggedTemplateLiteral","ColorStyle","secondary","primary","FontSize","tag","props","tagtext","MoreBoxStyle","TitleBoxStyle","_templateObject2","strong","g500","MoreTitleStyle","_templateObject3","MoreStyle","_templateObject4","g600","WriterBoxStyle","_templateObject5","g700","default","PrnvContentStyle","_templateObject6","BtnBoxStyle","_templateObject7","ReviewBox","_templateObject8","g900","host","API_SERVER_HOST","initState","iboard","iuser","name","writerPic","contents","createdAt","pics","beAf","comments","icomment","writerPk","writerName","comment","initComment","Read","_content$pics$","moveToRead","moveToList","moveToModify","page","useCustomMove","useParams","setContent","useState","setcontents","setComments","fetching","setFetching","getOneData","getOne","successFn","failFn","errorFn","result","console","log","useEffect","selectedImg","setSlectedImg","pic","length","successFnAdd","setPopRedirect","setResult","setPopTitle","setPopContent","failFnAdd","errorFnAdd","currentCommentId","setCurrentCommentId","showModal","setShowModal","successFnDel","failFnDel","errorFnDel","currentReadId","setCurrentReadId","showReadModal","setShowReadModal","successFnReadDel","delReadResult","setDelReadResult","failFnReadDel","errorFnReadDel","popTitle","popContent","popRedirect","WrapStyle","Fetching","className","src","concat","process","alt","ImgStyle","LargeImgStyle","ThumbnailStyle","map","index","handleThumbnailClick","ContentInfoStyle","ContentStyle","UserStyle","NameStyle","TagBoxStyle","Tag","_Fragment","handleDelRead","type","value","onChange","e","newContents","target","handleChange","placeholder","addComment","postComment","SelectedModal","confirmModal","deleteComment","cancelModal","confirmReadModal","deleteOne","cancelReadModal","ResultModal","closeModal","closeDelReadModal","ReadPage"],"sourceRoot":""}