{"version":3,"file":"static/js/809.5ea705a9.chunk.js","mappings":"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","sources":["api/MyApi.js","components/common/ResultModal.js","components/common/SelectedModal.js","components/community/styles/AddStyle.js","components/community/Add.js","pages/community/AddPage.js"],"sourcesContent":["import authAxios from \"../util/tokenUtil\";\r\n\r\nexport const API_SERVER_HOST = \"\";\r\nconst host = `${API_SERVER_HOST}/api`;\r\n\r\n// 마이페이지 : 예약 내역 가져오기 (GET)\r\nexport const getMyBook = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.get(`${host}/user/reservation`, {\r\n      params: param,\r\n    });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"예약 내역 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"예약 내역 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 예약 내역 변경하기 (PUT)\r\nexport const putMyBook = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.put(`${host}/reservation`, {\r\n      params: param,\r\n    });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"예약 변경 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"예약 변경 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 예약 내역 삭제하기 (PATCH)\r\nexport const patchMyBook = async ({\r\n  patchBookForm,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  const data = {\r\n    checkShop: patchBookForm.checkShop,\r\n    ireview: patchBookForm.ireview,\r\n  };\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.patch(`${host}/reservation`, {\r\n      ...header,\r\n      data: data,\r\n    });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"예약 내역 완전 삭제 성공\");\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"예약 내역 삭제 오류\");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"서버 완전 오류\");\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 마이페이지 : 북마크 내역 가져오기 (GET)\r\nexport const getMyList = async ({ param, successFn, failFn, errorFn }) => {\r\n  console.log(\"parameter :\", param);\r\n  try {\r\n    const res = await authAxios.get(`${host}/user/bookmark`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"북마크 내역 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"북마크 내역 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 리뷰 내역 가져오기 (GET)\r\nexport const getMyReview = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.get(`${host}/user/review`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"리뷰 내역 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"리뷰 내역 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 리뷰 내역 삭제하기 (DELETE)\r\nexport const deleteMyReview = async ({\r\n  deleteForm,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  console.log(\"폼\", deleteForm);\r\n  // console.log(\"log\", data);\r\n  const data = {\r\n    checkShop: deleteForm.checkShop,\r\n    ireview: deleteForm.ireview,\r\n  };\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.delete(`${host}/user/review`, {\r\n      ...header,\r\n      data: data,\r\n    });\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"리뷰 내역 삭제 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"리뷰 내역 삭제 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 유저 정보 가져오기 (GET)\r\nexport const getUserInfo = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.get(`${host}/user`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"유저 정보 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"유저 정보 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 유저 정보 수정하기 (PUT) 안됨 ㅎㅎ\r\nexport const putUserInfo = async ({ userData, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await authAxios.put(`${host}/user`, userData, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"유저 정보 수정 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"유저 정보 수정 오류\", res.statusText);\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    if (error.response) {\r\n      console.log(\"서버 응답 오류\", error.response.data);\r\n      errorFn(\"유저 정보 수정 서버 오류: \", error.response.data);\r\n    } else {\r\n      errorFn(\"유저 정보 수정 서버 오류\");\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭시 콜백 함수\r\nconst ResultModal = ({ title, content, callFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div onClick={callFn}>\r\n          <Button bttext=\"확인\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultModal;\r\n","import React from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭시 콜백 함수\r\nconst SelectedModal = ({ title, content, confirmFn, cancelFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            gap: \"20px\",\r\n          }}\r\n        >\r\n          <div onClick={confirmFn}>\r\n            <Button bttext=\"확인\" />\r\n          </div>\r\n          <div onClick={cancelFn}>\r\n            <Button bttext=\"취소\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedModal;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const AddBoxStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 20px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  align-self: stretch;\r\n  .titleBox {\r\n    display: flex;\r\n    padding: 10px;\r\n    align-items: center;\r\n    gap: 10px;\r\n    flex: 1 0 0;\r\n    color: ${ColorStyle.g900};\r\n    font-size: ${FontSize.strong};\r\n    font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  }\r\n  .inputBox {\r\n    display: flex;\r\n    width: 1036px;\r\n    align-items: flex-start;\r\n    align-self: stretch;\r\n    input {\r\n      appearance: none;\r\n      padding: 10px;\r\n      width: 100%;\r\n      /* min-width: 220px; */\r\n      height: 100%;\r\n      border: 1px solid ${ColorStyle.g500};\r\n      background: #fff;\r\n      font-size: ${FontSize.default};\r\n      /* color: ${ColorStyle.g500}; */\r\n    }\r\n  }\r\n`;\r\nexport const UserBoxStyle = styled(AddBoxStyle)`\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  .writerBox {\r\n    display: flex;\r\n    width: 1036px;\r\n    height: 44px;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    font-size: ${FontSize.default};\r\n    color: ${ColorStyle.g500};\r\n    /* font-family: \"DAEAM_LEE_TAE_JOON\"; */\r\n  }\r\n`;\r\nexport const ContentBoxStyle = styled(AddBoxStyle)`\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  .inputBox {\r\n    display: flex;\r\n    width: 1036px;\r\n    align-items: flex-start;\r\n    align-self: stretch;\r\n    textarea {\r\n      resize: none;\r\n      padding: 10px;\r\n      width: 100%;\r\n      min-height: 100px;\r\n      /* resize: vertical; */\r\n      font-size: ${FontSize.default};\r\n      border-top: 1px solid ${ColorStyle.g500};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ImageBoxStyle = styled(AddBoxStyle)`\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  .inputBox {\r\n    display: flex;\r\n    width: 930px;\r\n    align-items: flex-start;\r\n    align-self: stretch;\r\n    input {\r\n      appearance: none;\r\n      padding: 10px;\r\n      width: 100%;\r\n      min-width: 220px;\r\n      height: 100%;\r\n      border: 0px solid ${ColorStyle.g500};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FootStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 50px 0px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n  align-self: stretch;\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  .btnBox {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 20px;\r\n    flex: 1 0 0;\r\n  }\r\n`;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { getUserInfo } from \"../../api/MyApi\";\r\nimport { postAdd } from \"../../api/communityApi\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport Button from \"../button/Button\";\r\nimport Fetching from \"../common/Fetching\";\r\nimport {\r\n  AddBoxStyle,\r\n  ContentBoxStyle,\r\n  FootStyle,\r\n  ImageBoxStyle,\r\n  UserBoxStyle,\r\n} from \"./styles/AddStyle\";\r\nimport { WrapStyle } from \"./styles/ListStyle\";\r\nimport SelectedModal from \"../common/SelectedModal\";\r\nimport ResultModal from \"../common/ResultModal\";\r\n\r\n// 글 쓰기 초기값\r\nconst initState = {\r\n  pics: [],\r\n  title: \"\",\r\n  contents: \"\",\r\n};\r\n\r\n// 유저 정보 초기값\r\nconst initProfile = {\r\n  nickname: \"\",\r\n};\r\n\r\nconst Add = () => {\r\n  // 유저 정보 가져오기\r\n  const [profileData, setProfileData] = useState(initProfile);\r\n  useEffect(() => {\r\n    const param = {};\r\n    getUserInfo({\r\n      param,\r\n      successFn: successFnProfile,\r\n      failFn: failFnProfile,\r\n      errorFn: errorFnProfile,\r\n    });\r\n  }, []);\r\n\r\n  const successFnProfile = result => {\r\n    setProfileData(result);\r\n    console.log(result);\r\n  };\r\n  const failFnProfile = result => {\r\n    console.log(result);\r\n  };\r\n  const errorFnProfile = result => {\r\n    console.log(result);\r\n  };\r\n\r\n  // 로딩창 연결\r\n  const [fetching, setFetching] = useState(false);\r\n\r\n  const [product, setProduct] = useState(initState);\r\n\r\n  // 글 작성 시 내용 업데이트, 텍스트 필드의 변경사항 처리\r\n  const handleChange = e => {\r\n    // ...product 기존 product 상태의 모든 속성을 복사(불변성 유지)\r\n    // e.target.name은 변경된 텍스트 필드의 이름\r\n    // e.target.value는 입력된 새로운 값을 나타냄\r\n    // setProduct() 동적 속성 이름을 사용하여 해당 텍스트 필드의 값을 업데이트\r\n    setProduct({ ...product, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // useRef(DOM 요소를 참조한다.)\r\n  // useRef를 만든 후 반드 시 태그랑 연결\r\n  const uploadRef = useRef(null);\r\n\r\n  // 업로드 할 이미지 미리보기 상태 업데이트\r\n  const [images, setImages] = useState([]);\r\n\r\n  // 사진추가 버튼 클릭시 이미지 파일 선택\r\n  const handleClickImg = () => {\r\n    uploadRef.current.click();\r\n  };\r\n\r\n  // 업로드 할 이미지 미리보기\r\n  const handleFileChange = e => {\r\n    // 파일 입력 필드에서 선택된 파일들에 대한 참조\r\n    // e.target.files는 사용자가 선택한 파일들의 목록을 포함\r\n    const files = e.target.files;\r\n    if (files) {\r\n      // 사용자가 선택한 파일로부터 URL을 생성\r\n      const newImages = Array.from(files).map(file =>\r\n        // 각 파일에 대해 임시 URL을 생성\r\n        // 이 URL은 브라우저 내에서 파일을 참조할 수 있는 경로를 제공\r\n        URL.createObjectURL(file),\r\n      );\r\n      // 기존 이미지 목록에 새로운 이미지 URL들을 추가\r\n      // ...prevImages는 기존의 이미지 목록\r\n      // ...newImages는 새로운 이미지 URL목록을 펼쳐서 하나의 배열로 합치는 작업\r\n      // 최종적으로 기존 이미지 목록에 새로운 이미지들이 추가\r\n      setImages(prevImages => [...prevImages, ...newImages]);\r\n    }\r\n  };\r\n\r\n  // 이미지 미리보기에서 삭제 함수\r\n  const deleteImage = indexToDelete => {\r\n    // 이미지 상태 업데이트 setImages()\r\n    setImages(prevImages =>\r\n      // filter 함수를 사용해,\r\n      // 제거할 이미지의 인덱스가 아닌 이미지만을 새배열에 포함\r\n      prevImages.filter((_, index) => index !== indexToDelete),\r\n    );\r\n  };\r\n\r\n  // 파일 업로드 실행\r\n  const handleClick = async product => {\r\n    const formData = new FormData();\r\n\r\n    // 글 정보를 담은 dto Blob객체 생성\r\n    const dto = new Blob(\r\n      [\r\n        JSON.stringify({\r\n          title: product.title,\r\n          contents: product.contents,\r\n        }),\r\n      ],\r\n      // JSON 형식으로 설정\r\n      { type: \"application/json\" },\r\n    );\r\n\r\n    // dto 객체를 FormData에 추가\r\n    formData.append(\"dto\", dto);\r\n\r\n    // 이미지를 formData에 추가하기 위해 image 배열을 순회하는 Promise 배열 생성\r\n    const imagePromises = images.map(async (image, index) => {\r\n      // 이미지 URL로 부터 응답을 가져옴\r\n      const response = await fetch(image);\r\n      // 응답으로부터 Blob 객체를 생성\r\n      const blob = await response.blob();\r\n      // Blob 객체로부터 File 객체를 생성\r\n      const file = new File([blob], `image${index}.jpg`, {\r\n        type: \"image/jpeg\",\r\n      });\r\n      // 생성된 File 객체를 fromData에 추가\r\n      formData.append(\"pics\", file);\r\n    });\r\n\r\n    // 모든 이미지가 FormData에 추가된 후 서버에 전송\r\n    // 모든 이미지 처리가 완료될 때까지 대기\r\n    await Promise.all(imagePromises);\r\n    // 데이터 전송 중임을 나타내는 상태 true\r\n    setFetching(true);\r\n    // formData를 서버에 전송\r\n    postAdd({ product: formData, successFn, failFn, errorFn });\r\n  };\r\n\r\n  // 모달창 관련\r\n  const [result, setResult] = useState(false);\r\n  const [addResult, setAddResult] = useState(false);\r\n  const [popTitle, setPopTitle] = useState(\"\");\r\n  const [popContent, setPopContent] = useState(false);\r\n  const [popRedirect, setPopRedirect] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // 확인 버튼 클릭 시\r\n  const handleConfirm = product => {\r\n    // 글 등록 로직 실행\r\n    handleClick(product);\r\n    // 모달 닫기\r\n    setShowModal(false);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    // 모달창 닫기\r\n    setAddResult(false);\r\n    moveToList({ page: 1 });\r\n  };\r\n  // 취소 버튼 클릭 시\r\n  const handleCancel = () => {\r\n    // 모달 닫기\r\n    setShowModal(false);\r\n  };\r\n\r\n  // 글 등록 버튼 클릭 핸들러\r\n  const handleAddClick = () => {\r\n    // 모달 띄우기\r\n    setShowModal(true);\r\n  };\r\n\r\n  const successFn = addResult => {\r\n    console.log(\"글 등록 성공\", addResult);\r\n    setFetching(false);\r\n    setAddResult(true);\r\n    setPopTitle(\"글 등록 성공\");\r\n    setPopContent(\"글 등록에 성공하였습니다.\");\r\n    setPopRedirect(true);\r\n  };\r\n  const failFn = addResult => {\r\n    console.log(\"글 등록 실패\", addResult);\r\n    setFetching(false);\r\n    setAddResult(false);\r\n    setPopTitle(\"글 등록 실패\");\r\n    setPopContent(\"오류가 발생하였습니다. 잠시 후 다시 시도해주세요\");\r\n    setPopRedirect(false);\r\n  };\r\n  const errorFn = addResult => {\r\n    console.log(\"글 등록 실패\", addResult);\r\n    setFetching(false);\r\n    setAddResult(true);\r\n    setPopTitle(\"서버 오류\");\r\n    setPopContent(\"서버가 불안정합니다. 관리자에게 문의해주세요.\");\r\n    setPopRedirect(false);\r\n  };\r\n\r\n  const { moveToList } = useCustomMove();\r\n\r\n  return (\r\n    <WrapStyle>\r\n      {fetching ? <Fetching /> : null}\r\n      <AddBoxStyle>\r\n        <div className=\"titleBox\">제목</div>\r\n        <div className=\"inputBox\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"글의 제목을 입력해주세요\"\r\n            onChange={e => handleChange(e)}\r\n            value={product.title}\r\n          />\r\n        </div>\r\n      </AddBoxStyle>\r\n      <UserBoxStyle>\r\n        <div className=\"titleBox\">작성자</div>\r\n        <div className=\"writerBox\">{profileData.nickname}</div>\r\n      </UserBoxStyle>\r\n      <ContentBoxStyle>\r\n        <div className=\"titleBox\">내용</div>\r\n        <div className=\"inputBox\">\r\n          <textarea\r\n            type=\"text\"\r\n            name=\"contents\"\r\n            placeholder=\"글의 내용을 입력해주세요(300자 이내)\"\r\n            onChange={e => handleChange(e)}\r\n            value={product.contents}\r\n          />\r\n        </div>\r\n      </ContentBoxStyle>\r\n      <ImageBoxStyle>\r\n        <div className=\"titleBox\">사진</div>\r\n\r\n        <div onClick={handleClickImg}>\r\n          <Button bttext=\"사진추가\" />\r\n        </div>\r\n        <div className=\"inputBox\">\r\n          <input\r\n            type=\"file\"\r\n            ref={uploadRef}\r\n            multiple={true}\r\n            style={{ display: \"none\" }}\r\n            onChange={handleFileChange}\r\n          />\r\n          <div className=\"previewBox\">\r\n            {images.map((src, index) => (\r\n              <img\r\n                key={index}\r\n                src={src}\r\n                alt={`미리보기${index}`}\r\n                style={{\r\n                  maxWidth: \"60px\",\r\n                  margin: \"5px\",\r\n                  cursor: \"pointer\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                onClick={() => deleteImage(index)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </ImageBoxStyle>\r\n      <FootStyle>\r\n        <div className=\"btnBox\">\r\n          <div onClick={handleAddClick}>\r\n            <Button bttext=\"확인\" />\r\n          </div>\r\n          <div onClick={moveToList}>\r\n            <Button bttext=\"취소\" />\r\n          </div>\r\n        </div>\r\n      </FootStyle>\r\n      {showModal ? (\r\n        <SelectedModal\r\n          title=\"글 등록 확인\"\r\n          content=\"글을 등록하시겠습니까?\"\r\n          confirmFn={() => handleConfirm(product)}\r\n          cancelFn={handleCancel}\r\n        />\r\n      ) : null}\r\n      {addResult ? (\r\n        <ResultModal\r\n          title={popTitle}\r\n          content={popContent}\r\n          callFn={closeModal}\r\n        />\r\n      ) : null}\r\n    </WrapStyle>\r\n  );\r\n};\r\n\r\nexport default Add;\r\n","import React from \"react\";\r\nimport Add from \"../../components/community/Add\";\r\n\r\n// 글 쓰기 페이지입니다.\r\nconst AddPage = () => {\r\n  return (\r\n    <div>\r\n      <Add />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPage;\r\n"],"names":["host","concat","getMyBook","async","param","successFn","failFn","errorFn","_ref","res","authAxios","get","params","status","toString","charAt","console","log","data","error","patchMyBook","patchBookForm","_ref3","checkShop","ireview","header","headers","patch","getMyList","_ref4","getMyReview","_ref5","deleteMyReview","deleteForm","_ref6","delete","getUserInfo","_ref7","putUserInfo","userData","_ref8","put","statusText","response","title","content","callFn","_jsx","style","position","display","alignItems","justifyContent","left","top","width","height","background","zIndex","children","_jsxs","textAlign","flexDirection","gap","padding","borderRadius","fontFamily","fontSize","paddingBottom","borderBottom","onClick","Button","bttext","confirmFn","cancelFn","AddBoxStyle","styled","div","_templateObject","_taggedTemplateLiteral","ColorStyle","g900","FontSize","strong","g500","default","UserBoxStyle","_templateObject2","ContentBoxStyle","_templateObject3","ImageBoxStyle","_templateObject4","FootStyle","_templateObject5","initState","pics","contents","initProfile","nickname","Add","profileData","setProfileData","useState","useEffect","successFnProfile","failFnProfile","errorFnProfile","result","fetching","setFetching","product","setProduct","handleChange","e","target","name","value","uploadRef","useRef","images","setImages","setResult","addResult","setAddResult","popTitle","setPopTitle","popContent","setPopContent","popRedirect","setPopRedirect","showModal","setShowModal","handleConfirm","formData","FormData","dto","Blob","JSON","stringify","type","append","imagePromises","map","image","index","fetch","blob","file","File","Promise","all","postAdd","handleClick","moveToList","useCustomMove","WrapStyle","Fetching","className","placeholder","onChange","handleClickImg","current","click","ref","multiple","files","newImages","Array","from","URL","createObjectURL","prevImages","src","alt","maxWidth","margin","cursor","deleteImage","indexToDelete","filter","_","handleAddClick","SelectedModal","handleCancel","ResultModal","closeModal","page","AddPage"],"sourceRoot":""}