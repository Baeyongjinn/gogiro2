{"version":3,"file":"static/js/391.1bbe6c1e.chunk.js","mappings":"4IAEO,MACDA,EAAI,GAAAC,OADqB,GACA,kBAGlBC,EAAUC,UAAkD,IAA3C,MAAEC,EAAK,UAAEC,EAAS,OAAEC,EAAM,QAAEC,GAASC,EACjE,IACE,MAAMC,QAAYC,EAAAA,EAAMC,IAAI,GAADV,OAAID,GAAQ,CAAEY,OAAQR,IAExB,MADVK,EAAII,OAAOC,WACfC,OAAO,IAChBC,QAAQC,IAAI,mEACZZ,EAAUI,EAAIS,OAEdZ,EAAO,kEAEX,CAAE,MAAOa,GACPZ,EAAQY,EACV,E,gECfF,MAUA,EAVeC,IACb,MAAM,OAAEC,GAAWD,EAEnB,OACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAC,UACRF,EAAAA,EAAAA,KAAA,QAAAE,SAAOH,KACG,C,qECNT,MAAME,EAAYE,EAAAA,EAAOC,OAAMC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0aAkBzBC,EAAAA,EAAWC,Q,2GCfxB,MAAMC,EAAY,CAChB,CACEC,OAAQ,EACRC,SAAU,EACVC,MAAO,EACPC,WAAY,GACZC,MAAO,GACPC,SAAU,GACVC,KAAM,CAAC,MA0GX,EAtGe9B,IAAuC,IAAtC,WAAE+B,EAAU,YAAEC,EAAc,IAAIhC,EAC9C,MAAM,KAAEiC,EAAI,OAAEC,EAAM,WAAEC,IAAeC,EAAAA,EAAAA,MAG9BX,EAAUY,IAAeC,EAAAA,EAAAA,UAASf,EAAU,GAAGE,WACtDc,EAAAA,EAAAA,YAAU,KACR,MAAM3C,EAAQ,CAAEqC,OAAMC,WACtBxC,EAAAA,EAAAA,GAAQ,CAAEE,QAAOC,YAAWC,SAAQC,WAAU,GAC7C,CAACkC,EAAMC,IAEV,MAAMrC,EAAY2C,IAChBH,EAAYG,GACZhC,QAAQC,IAAI+B,EAAO,EAEf1C,EAAS0C,IACbhC,QAAQC,IAAI+B,EAAO,EAEfzC,EAAUyC,IACdhC,QAAQC,IAAI+B,EAAO,GAIdC,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,IAEtCK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,IAExCO,EAAaC,IAAkBR,EAAAA,EAAAA,UAAS,KAExCS,EAAWC,IAAgBV,EAAAA,EAAAA,UAAS,KACpCW,EAAcC,IAAmBZ,EAAAA,EAAAA,UAAS,KAC1Ca,EAAcC,IAAmBd,EAAAA,EAAAA,UAAS,IAEjDC,EAAAA,EAAAA,YAAU,KAER,MAAMc,EAAQC,KAAKC,KAAKxB,EAAaC,GACrCU,EAAcW,GAEd,MAAMG,EAAUC,MAAMC,KAAK,CAAEC,OAAQN,IAAS,CAACO,EAAGC,IAAMA,EAAI,IAC5Df,EAAeU,GACfhD,QAAQC,IAAI+C,EAAQ,GACnB,CAACzB,EAAYC,IAEhB,MAAM8B,GAAWC,EAAAA,EAAAA,OACVC,EAAcC,IAAkBC,EAAAA,EAAAA,MA6BjCC,EAAoBtB,EAAYuB,MAAMjB,EAAcF,GAE1D,OACEoB,EAAAA,EAAAA,MAACC,EAAAA,GAAc,CAAAtD,SAAA,EACbF,EAAAA,EAAAA,KAACyD,EAAAA,GAAc,CAACC,QAxBDC,KACjB7B,GAAe8B,GAAQA,EAAO,MAEzB/B,EAAc,GAAKI,IAAc,IACpCG,EAAgBD,EAAeF,GAC/BK,EAAgBD,EAAeJ,GACjC,EAkBuC4B,SAA0B,IAAhBhC,EAAkB3B,SAAC,iBAIjEmD,EAAkBS,KAAIC,IACrB/D,EAAAA,EAAAA,KAACyD,EAAAA,GAAc,CAEbC,QAASA,KAtCEM,MACjBd,EAAae,IAAI,OAAQD,GACzBb,EAAeD,GACfF,EAAS,gBAADrE,OAAiBqF,EAAO,YAoCZ,EAEdE,OAAQrC,IAAgBkC,EAAO7D,SAE9B6D,GANIA,MAUT/D,EAAAA,EAAAA,KAACyD,EAAAA,GAAc,CACbC,QA/BaS,KACjBrC,GAAe8B,GAAQA,EAAO,KAE1B/B,EAAc,EAAIM,IACpBC,EAAgBD,EAAeF,GAC/BK,EAAgBD,EAAeJ,GACjC,EA0BI4B,SAAUhC,IAAgBF,EAAWzB,SACtC,mBAGc,C,qSCjHd,MAAMkE,EAAYjE,EAAAA,EAAOkE,IAAGhE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oKAUtBgE,EAAanE,EAAAA,EAAOkE,IAAGE,IAAAA,GAAAjE,EAAAA,EAAAA,GAAA,uPAOrBkE,EAAAA,EAASC,QAKXC,GAAcvE,EAAAA,EAAAA,GAAOmE,EAAPnE,CAAkBwE,IAAAA,GAAArE,EAAAA,EAAAA,GAAA,gLAEnBC,EAAAA,EAAWqE,MACrB9E,GAAUA,EAAM+E,SAAWtE,EAAAA,EAAWuE,KAAO,MAE3CvE,EAAAA,EAAWuE,MAMhBC,EAAW5E,EAAAA,EAAOkE,IAAGW,IAAAA,GAAA1E,EAAAA,EAAAA,GAAA,kNAOvBR,GAASA,EAAMmF,QAKbC,EAAa/E,EAAAA,EAAOkE,IAAGc,IAAAA,GAAA7E,EAAAA,EAAAA,GAAA,qOAGfR,GAASA,EAAMsF,iBASvBC,EAAYlF,EAAAA,EAAOkE,IAAGiB,IAAAA,GAAAhF,EAAAA,EAAAA,GAAA,sQAYtBR,GAASA,EAAMmF,QAIfM,EAAapF,EAAAA,EAAOkE,IAAGmB,IAAAA,GAAAlF,EAAAA,EAAAA,GAAA,sIAMdC,EAAAA,EAAWqE,MAEpBa,EAAWtF,EAAAA,EAAOkE,IAAGqB,IAAAA,GAAApF,EAAAA,EAAAA,GAAA,4FAMrBqF,EAAgBxF,EAAAA,EAAOkE,IAAGuB,IAAAA,GAAAtF,EAAAA,EAAAA,GAAA,mIAS1BuF,EAAiB1F,EAAAA,EAAOkE,IAAGyB,IAAAA,GAAAxF,EAAAA,EAAAA,GAAA,yLAY3ByF,EAAmB5F,EAAAA,EAAOkE,IAAG2B,IAAAA,GAAA1F,EAAAA,EAAAA,GAAA,6GAO7B2F,EAAe9F,EAAAA,EAAOkE,IAAG6B,IAAAA,GAAA5F,EAAAA,EAAAA,GAAA,0JAOrBkE,EAAAA,EAASC,QAGb0B,EAAYhG,EAAAA,EAAOkE,IAAG+B,IAAAA,GAAA9F,EAAAA,EAAAA,GAAA,6MAWtB+F,EAAYlG,EAAAA,EAAOkE,IAAGiC,IAAAA,GAAAhG,EAAAA,EAAAA,GAAA,qIAMxBC,EAAAA,EAAWgG,MAETC,EAAcrG,EAAAA,EAAOkE,IAAGoC,IAAAA,GAAAnG,EAAAA,EAAAA,GAAA,iHAOxBoG,EAAevG,EAAAA,EAAOkE,IAAGsC,IAAAA,GAAArG,EAAAA,EAAAA,GAAA,8PAS3BC,EAAAA,EAAWqG,MAGTC,EAAW1G,EAAAA,EAAOkE,IAAGyC,IAAAA,GAAAxG,EAAAA,EAAAA,GAAA,iFAM5ByG,EAAc,CAClBC,OAAQ,IACRC,OAAQ,KAGJC,EAAeC,GACZC,GAAK,sBAAAzI,OAA0BoI,EAAYI,GAAI,UAAAxI,OAASyI,EAAK,MAGzD5D,EAAiBrD,EAAAA,EAAOkE,IAAGgD,IAAAA,GAAA/G,EAAAA,EAAAA,GAAA,yaAMdC,EAAAA,EAAWqE,KAOpBJ,EAAAA,EAASC,QACb3E,GAAUA,EAAMoE,OAAS3D,EAAAA,EAAWgG,KAAOhG,EAAAA,EAAW+G,MAGpD/G,EAAAA,EAAWgG,KAIpBW,EAAa,SAAbA,CAAsBK,IAAAA,GAAAjH,EAAAA,EAAAA,GAAA,mJAQtB4G,EAAa,SAAbA,CAAsBM,IAAAA,GAAAlH,EAAAA,EAAAA,GAAA,mJASfmD,EAAiBtD,EAAAA,EAAOC,OAAMqH,IAAAA,GAAAnH,EAAAA,EAAAA,GAAA,qNAK5BkE,EAAAA,EAASC,QACb3E,GAAUA,EAAMoE,OAAS3D,EAAAA,EAAWmH,KAAOnH,EAAAA,EAAW+G,OAChDxH,GAAUA,EAAMoE,OAAS,OAAS,UAGtC3D,EAAAA,EAAWmH,MAKXC,EAAcxH,EAAAA,EAAOkE,IAAGuD,IAAAA,GAAAtH,EAAAA,EAAAA,GAAA,+qBAUnBC,EAAAA,EAAWsH,KASLtH,EAAAA,EAAWsH,KAClBrD,EAAAA,EAASsD,QACbvH,EAAAA,EAAWqE,KASArE,EAAAA,EAAWsH,KAClBrD,EAAAA,EAASsD,QACbvH,EAAAA,EAAWqE,MAIXmD,EAAiB5H,EAAAA,EAAOkE,IAAG2D,IAAAA,GAAA1H,EAAAA,EAAAA,GAAA,qG,0DC9QjC,MC+CP,EAxCsBgB,KAEpB,MAAM0B,GAAWC,EAAAA,EAAAA,OAEVgF,EAAiBC,IAAqB9E,EAAAA,EAAAA,MAEvCjC,EAAO8G,EAAgB5I,IAAI,QAC7B8I,SAASF,EAAgB5I,IAAI,SAC7B,EAEE+B,EAAS6G,EAAgB5I,IAAI,UAC/B8I,SAASF,EAAgB5I,IAAI,WAC7B,GAEE+I,GAAkBC,EAAAA,EAAAA,IAAmB,CAAElH,OAAMC,WAAU5B,WAuB7D,MAAO,CAAE6B,WArBUiH,IACjB,IAAIC,EAAW,GACf,GAAID,EAAW,CACb,MAAMtE,GD1BWwE,EC0BMF,EAAUnH,KD1BTsH,EC0BetH,EDzBtCqH,GACIC,GC0BLF,GAAWF,EAAAA,EAAAA,IAAmB,CAC5BlH,KAAM6C,IACLxE,UACL,MACE+I,EAAWH,EDhCKM,IAACF,EAAOC,ECkC1BzF,EAAS,CAAE2F,SAAU,UAAWvH,OAAQmH,GAAW,EAUhCK,aAPAC,IACnB7F,EAAS,CAAE2F,SAAS,aAADhK,OAAekK,GAAOzH,OAAQgH,GAAkB,EAMlCU,WAHhBD,IACjB7F,EAAS,CAAE2F,SAAS,WAADhK,OAAakK,GAAOzH,OAAQgH,GAAkB,EAEpBjH,OAAMC,SAAQ,C,6GCxC/D,MA8BA,EA9BiB2H,KAgBbxF,EAAAA,EAAAA,MAAA,OAAK6D,MAfY,CACjB4B,SAAU,QACVC,KAAM,EACNC,IAAK,EACLC,OAAQ,IACRC,MAAO,OACPC,OAAQ,OACRC,WAAY,wBACZC,QAAS,OACTC,cAAe,SACfC,IAAK,OACLrE,eAAgB,SAChBsE,WAAY,UAGWxJ,SAAA,EACrBF,EAAAA,EAAAA,KAAC2J,EAAAA,EAAU,CAACC,KAAM,GAAI3E,MAAO1E,EAAAA,EAAWC,QAASqJ,SAAS,KAC1D7J,EAAAA,EAAAA,KAAA,OACEoH,MAAO,CACL0C,WAAY,qBACZC,SAAU,QACV7J,SACH,8D,mCCxBA,MAAM8J,E,QAAW7J,EAAOkE,IAAGhE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qQAQZC,EAAAA,EAAW0J,UAGpB1J,EAAAA,EAAWC,QACPgE,EAAAA,EAAS0F,KCF1B,EAVYpK,IACV,MAAM,QAAEqK,GAAYrK,EAEpB,OACEE,EAAAA,EAAAA,KAACgK,EAAQ,CAAA9J,UACPF,EAAAA,EAAAA,KAAA,QAAAE,SAAOiK,KACE,E,cCNf,MAkBA,EAlBeC,KAEX7G,EAAAA,EAAAA,MAACoE,EAAAA,GAAW,CAAAzH,SAAA,EACVqD,EAAAA,EAAAA,MAAA,UAAQ8G,UAAU,SAAQnK,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UAAQsK,MAAO,EAAEpK,SAAC,kBAClBF,EAAAA,EAAAA,KAAA,UAAQsK,MAAO,EAAEpK,SAAC,kBAClBF,EAAAA,EAAAA,KAAA,UAAQsK,MAAO,EAAEpK,SAAC,qBAEpBF,EAAAA,EAAAA,KAAA,OAAKqK,UAAU,YAAWnK,UACxBF,EAAAA,EAAAA,KAAA,SAAOuK,YAAY,yFAErBvK,EAAAA,EAAAA,KAAA,OAAKqK,UAAU,OAAMnK,UACnBF,EAAAA,EAAAA,KAAA,OAAKwK,IAAI,4BAA4BC,IAAI,gBCOjD,EAdcC,KAEVnH,EAAAA,EAAAA,MAACe,EAAAA,GAAU,CAAApE,SAAA,EACTF,EAAAA,EAAAA,KAAC+E,EAAAA,GAAQ,CAAA7E,SAAC,kBACVF,EAAAA,EAAAA,KAACkF,EAAAA,GAAU,CAACE,eAAe,SAAQlF,SAAC,kBACpCqD,EAAAA,EAAAA,MAAC8B,EAAAA,GAAS,CAAAnF,SAAA,EACRF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,wBACLF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,6BCgBPO,EAAY,CAChB,CACEC,OAAQ,EACRC,SAAU,EACVC,MAAO,EACPC,WAAY,GACZC,MAAO,GACPC,SAAU,GACVC,KAAM,CAAC,MAsJX,EAlJa2J,KAEX,MAAM,KAAExJ,EAAI,OAAEC,EAAM,WAAE0H,IAAexH,EAAAA,EAAAA,MAE9BsJ,EAAYC,IAAiBrJ,EAAAA,EAAAA,UAASf,IAEtCqK,EAAaC,IAAkBvJ,EAAAA,EAAAA,UAAS,CAAC,IAEzCwJ,EAASC,IAAczJ,EAAAA,EAAAA,UAAS,CACrCd,OAAQ,EACRC,SAAU,EACVC,MAAO,EACPC,WAAY,GACZC,MAAO,GACPoK,UAAW,GACXnK,SAAU,GACVC,KAAM,CAAC,OAGFmK,EAAUC,IAAe5J,EAAAA,EAAAA,WAAS,IAGzCC,EAAAA,EAAAA,YAAU,KACR,MAAM3C,EAAQ,CAAEqC,OAAMC,WACtBxC,EAAAA,EAAAA,GAAQ,CAAEE,QAAOC,YAAWC,SAAQC,WAAU,GAC7C,CAACkC,EAAMC,IAGV,MAAMrC,EAAY2C,IAChBmJ,EAAcnJ,GACd0J,GAAY,GACZ1L,QAAQC,IAAI+B,EAAO,EAEf1C,EAAS0C,IACb0J,GAAY,GACZ1L,QAAQC,IAAI+B,EAAO,EAEfzC,EAAUyC,IACd0J,GAAY,GACZ1L,QAAQC,IAAI+B,EAAO,EAsBrB,OACE6B,EAAAA,EAAAA,MAACa,EAAAA,GAAS,CAAAlE,SAAA,CACPiL,GAAWnL,EAAAA,EAAAA,KAAC+I,EAAQ,IAAM,MAC3B/I,EAAAA,EAAAA,KAAC0K,EAAK,IAELE,EAAW9G,KAAIuH,IACd9H,EAAAA,EAAAA,MAAA,OAAArD,SAAA,EACEqD,EAAAA,EAAAA,MAACmB,EAAAA,GAAW,CACVG,SAAUiG,IAAgBO,EAAK3K,OAC/BgD,QAASA,KA3BM2H,KACnBP,IAAgBO,EAAK3K,OACvBqK,EAAe,OAEfA,EAAeM,EAAK3K,QACpBuK,EAAW,CACTvK,OAAQ2K,EAAK3K,OACbC,SAAU0K,EAAK1K,SACfC,MAAOyK,EAAKzK,MACZC,WAAYwK,EAAKxK,WACjBC,MAAOuK,EAAKvK,MACZoK,UAAWG,EAAKH,UAChBnK,SAAUsK,EAAKtK,SACfC,KAAMqK,EAAKrK,OAEf,EAaUsK,CAAiBD,EAAK,EACtBnL,SAAA,EAEFF,EAAAA,EAAAA,KAAC+E,EAAAA,GAAQ,CAACE,MAAO1E,EAAAA,EAAW+G,KAAKpH,SAAEmL,EAAK1K,YACxCX,EAAAA,EAAAA,KAACkF,EAAAA,GAAU,CAAAhF,SAAEmL,EAAKvK,SAClByC,EAAAA,EAAAA,MAAC8B,EAAAA,GAAS,CAACJ,MAAO1E,EAAAA,EAAW+G,KAAKpH,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAAE,SAAMmL,EAAKxK,cACXb,EAAAA,EAAAA,KAAA,OAAAE,SAAMmL,EAAKH,kBAMdJ,IAAgBO,EAAK3K,SACpB6C,EAAAA,EAAAA,MAACgC,EAAAA,GAAU,CAAArF,SAAA,EACTqD,EAAAA,EAAAA,MAACkC,EAAAA,GAAQ,CAAAvF,SAAA,EACPF,EAAAA,EAAAA,KAAC2F,EAAAA,GAAa,CAAAzF,UACZF,EAAAA,EAAAA,KAAA,OAAKwK,IAAKQ,EAAQhK,KAAK,GAAIyJ,IAAI,aAEjClH,EAAAA,EAAAA,MAACsC,EAAAA,GAAc,CAAA3F,SAAA,EACbF,EAAAA,EAAAA,KAAA,OAAKqK,UAAU,YAAWnK,UACxBF,EAAAA,EAAAA,KAAA,OAAKwK,IAAKQ,EAAQhK,KAAK,GAAIyJ,IAAI,aAEjCzK,EAAAA,EAAAA,KAAA,OAAKqK,UAAU,YAAWnK,UACxBF,EAAAA,EAAAA,KAAA,OAAKwK,IAAKQ,EAAQhK,KAAK,GAAIyJ,IAAI,aAEjCzK,EAAAA,EAAAA,KAAA,OAAKqK,UAAU,YAAWnK,UACxBF,EAAAA,EAAAA,KAAA,OAAKwK,IAAKQ,EAAQhK,KAAK,GAAIyJ,IAAI,aAEjCzK,EAAAA,EAAAA,KAAA,OAAKqK,UAAU,YAAWnK,UACxBF,EAAAA,EAAAA,KAAA,OAAKwK,IAAKQ,EAAQhK,KAAK,GAAIyJ,IAAI,mBAIrClH,EAAAA,EAAAA,MAACwC,EAAAA,GAAgB,CAAA7F,SAAA,EACfqD,EAAAA,EAAAA,MAAC0C,EAAAA,GAAY,CAAA/F,SAAA,EACXqD,EAAAA,EAAAA,MAAC4C,EAAAA,GAAS,CAAAjG,SAAA,EACRF,EAAAA,EAAAA,KAAA,OAAKwK,IAAI,4BAA4BC,IAAI,oCACzClH,EAAAA,EAAAA,MAAC8C,EAAAA,GAAS,CAAAnG,SAAA,EACRF,EAAAA,EAAAA,KAAA,OAAAE,SAAM8K,EAAQnK,cAEd0C,EAAAA,EAAAA,MAACiD,EAAAA,GAAW,CAAAtG,SAAA,EACVF,EAAAA,EAAAA,KAACuL,EAAG,CAACpB,QAAQ,yBACbnK,EAAAA,EAAAA,KAACuL,EAAG,CAACpB,QAAQ,+BACbnK,EAAAA,EAAAA,KAACuL,EAAG,CAACpB,QAAQ,kCAInBnK,EAAAA,EAAAA,KAAC0G,EAAAA,EAAY,CAAAxG,SAAE8K,EAAQjK,eAEzBf,EAAAA,EAAAA,KAAC6G,EAAAA,GAAQ,CAAA3G,UACPF,EAAAA,EAAAA,KAAA,OACE0D,QAASA,KACPoF,GAAY,EACZ5I,UAEFF,EAAAA,EAAAA,KAACwL,EAAAA,EAAM,CAACzL,OAAO,mCA5DjBsL,EAAK3K,WAsEjBV,EAAAA,EAAAA,KAACyL,EAAAA,EAAM,CAACxK,WAAY,MACpBjB,EAAAA,EAAAA,KAACoK,EAAM,KACPpK,EAAAA,EAAAA,KAAC+H,EAAAA,GAAc,CAAA7H,UACbF,EAAAA,EAAAA,KAACwL,EAAAA,EAAM,CAACzL,OAAO,2BAEP,EC7KhB,EARiB2L,KAEb1L,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAC2K,EAAI,K","sources":["api/communityApi.js","components/button/Button.js","components/button/styles/ButtonStyle.js","components/common/Paging.js","components/community/styles/ListStyle.js","components/util/utils.js","components/hooks/useCustomMove.js","components/common/Fetching.js","components/tag/styles/TagStyle.js","components/tag/Tag.js","components/community/Search.js","components/community/Thead.js","components/community/List.js","pages/community/ListPage.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const API_SERVER_HOST = \"\";\r\nconst host = `${API_SERVER_HOST}/api/community`;\r\n\r\n// 게시판 전체 목록 가져오기\r\nexport const getList = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await axios.get(`${host}`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"커뮤니티 목록 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"커뮤니티 목록 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { DefaultBt } from \"./styles/ButtonStyle\";\r\n\r\nconst Button = props => {\r\n  const { bttext } = props;\r\n\r\n  return (\r\n    <DefaultBt>\r\n      <span>{bttext}</span>\r\n    </DefaultBt>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const DefaultBt = styled.button`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  gap: 10px;\r\n  background: #fff;\r\n  border: 2px solid #066e52;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  span {\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: 19px;\r\n    text-align: center;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    color: ${ColorStyle.primary};\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useCustomMove from \"../hooks/useCustomMove\";\r\nimport { getList } from \"../../api/communityApi\";\r\nimport { PagingBoxStyle, PagingNumStyle } from \"../community/styles/ListStyle\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nconst initState = [\r\n  {\r\n    iboard: 0,\r\n    boardNum: 0,\r\n    iuser: 0,\r\n    writerName: \"\",\r\n    title: \"\",\r\n    contents: \"\",\r\n    pics: [\"\"],\r\n  },\r\n];\r\n\r\nconst Paging = ({ totalItems, itemPerPage = 10 }) => {\r\n  const { page, search, moveToList } = useCustomMove();\r\n\r\n  // DB에서 boardNum을 받아와서 상태를 변경한다.\r\n  const [boardNum, setBoardNum] = useState(initState[0].boardNum);\r\n  useEffect(() => {\r\n    const param = { page, search };\r\n    getList({ param, successFn, failFn, errorFn });\r\n  }, [page, search]);\r\n  // 데이터 연동 처리 결과\r\n  const successFn = result => {\r\n    setBoardNum(result);\r\n    console.log(result);\r\n  };\r\n  const failFn = result => {\r\n    console.log(result);\r\n  };\r\n  const errorFn = result => {\r\n    console.log(result);\r\n  };\r\n\r\n  // 전체 페이지 수 계산\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  // 현재 페이지\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // 표시할 페이지 번호 배열\r\n  const [pageNumbers, setPageNumbers] = useState([]);\r\n  // 최대 보여지는 페이지 번호 범위\r\n  const [pageLimit, setPageLimit] = useState(10);\r\n  const [maxPageLimit, setMaxPageLimit] = useState(10);\r\n  const [minPageLimit, setMinpageLimit] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // boardNum을 10으로 나눈다음 Math.ceil 내장객체를 이용하여 정수로 만든다.\r\n    const pages = Math.ceil(totalItems / itemPerPage);\r\n    setTotalPages(pages);\r\n    // 만든 정수를 1부터 시작하여 배열로 만든다. 배열의 개수는 무한대로 설정할 수 있다.\r\n    const numbers = Array.from({ length: pages }, (_, i) => i + 1);\r\n    setPageNumbers(numbers);\r\n    console.log(numbers);\r\n  }, [totalItems, itemPerPage]);\r\n\r\n  const navigate = useNavigate();\r\n  const [searchParams, setSerchParams] = useSearchParams();\r\n\r\n  const moveToPage = pageNum => {\r\n    searchParams.set(\"page\", pageNum);\r\n    setSerchParams(searchParams);\r\n    navigate(`../list?page=${pageNum}&search=`);\r\n  };\r\n\r\n  // 이전 페이지 범위로 이동\r\n  const handlePrev = () => {\r\n    setCurrentPage(prev => prev - 10);\r\n\r\n    if ((currentPage - 1) % pageLimit === 0) {\r\n      setMaxPageLimit(maxPageLimit - pageLimit);\r\n      setMinpageLimit(minPageLimit - pageLimit);\r\n    }\r\n  };\r\n\r\n  // 다음 페이지 범위로 이동\r\n  const handleNext = () => {\r\n    setCurrentPage(prev => prev + 10);\r\n\r\n    if (currentPage + 1 > maxPageLimit) {\r\n      setMaxPageLimit(maxPageLimit + pageLimit);\r\n      setMinpageLimit(minPageLimit + pageLimit);\r\n    }\r\n  };\r\n\r\n  // 현재 페이지네여션을 렌더링할 페이지 번호들\r\n  const renderPageNumbers = pageNumbers.slice(minPageLimit, maxPageLimit);\r\n\r\n  return (\r\n    <PagingBoxStyle>\r\n      <PagingNumStyle onClick={handlePrev} disabled={currentPage === 1}>\r\n        이전\r\n      </PagingNumStyle>\r\n\r\n      {renderPageNumbers.map(number => (\r\n        <PagingNumStyle\r\n          key={number}\r\n          onClick={() => {\r\n            moveToPage();\r\n          }}\r\n          active={currentPage === number}\r\n        >\r\n          {number}\r\n        </PagingNumStyle>\r\n      ))}\r\n\r\n      <PagingNumStyle\r\n        onClick={handleNext}\r\n        disabled={currentPage === totalPages}\r\n      >\r\n        다음\r\n      </PagingNumStyle>\r\n    </PagingBoxStyle>\r\n  );\r\n};\r\n\r\nexport default Paging;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const WrapStyle = styled.div`\r\n  position: relative;\r\n  margin: 0 18vw 50px 18vw;\r\n  flex-wrap: wrap;\r\n  gap: auto;\r\n  @media (max-width: 1680px) {\r\n    margin: 0 50px 50px 50px;\r\n  }\r\n`;\r\n\r\nexport const TableStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-top: 3rem;\r\n  padding-bottom: 0.3rem;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.strong};\r\n  @media (max-width: 980px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const TtableStyle = styled(TableStyle)`\r\n  padding: 10px 0;\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  background: ${props => (props.selected ? ColorStyle.g200 : null)};\r\n  &:hover {\r\n    background: ${ColorStyle.g200};\r\n  }\r\n  @media (max-width: 980px) {\r\n    display: block;\r\n  }\r\n`;\r\nexport const TnoStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  width: 132px;\r\n  padding: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: ${props => props.color};\r\n  @media (max-width: 1200px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const TitleStyle = styled.div`\r\n  position: relative;\r\n  padding: 10px;\r\n  justify-content: ${props => props.justifyContent};\r\n  align-items: center;\r\n  cursor: pointer;\r\n  /* 1줄 말줄임 */\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const InfoStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 10px 0;\r\n  justify-content: space-between;\r\n  @media (max-width: 980px) {\r\n    display: none;\r\n  }\r\n  div {\r\n    width: 160px;\r\n    display: flex;\r\n    justify-content: center;\r\n    color: ${props => props.color};\r\n  }\r\n`;\r\n\r\nexport const TopenStyle = styled.div`\r\n  position: relative;\r\n  padding: 30px 60px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 100px;\r\n  border: 1px solid ${ColorStyle.g500};\r\n`;\r\nexport const ImgStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\nexport const LargeImgStyle = styled.div`\r\n  position: relative;\r\n  max-width: 300px;\r\n  min-width: 60px;\r\n  img {\r\n    width: 100%;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\nexport const ThumbnailStyle = styled.div`\r\n  position: relative;\r\n  max-width: 300px;\r\n  max-height: 180px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  img {\r\n    width: 100%;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\nexport const ContentInfoStyle = styled.div`\r\n  position: relative;\r\n  width: 660px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 34px;\r\n`;\r\nexport const ContentStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 34px;\r\n  div {\r\n    font-size: ${FontSize.strong};\r\n  }\r\n`;\r\nexport const UserStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: flex-end;\r\n  gap: 20px;\r\n  img {\r\n    border-radius: 28px;\r\n    box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\r\n  }\r\n`;\r\nexport const NameStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 9px;\r\n  color: ${ColorStyle.g900};\r\n`;\r\nexport const TagBoxStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n`;\r\nexport const SummaryStyle = styled.div`\r\n  position: relative;\r\n  display: -webkit-box;\r\n  /* 2줄이상 말줄임 */\r\n  overflow: hidden;\r\n  word-break: break-all;\r\n  text-overflow: ellipsis;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n  color: ${ColorStyle.g600};\r\n`;\r\n\r\nexport const BtnStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst breakpoints = {\r\n  mobile: 600,\r\n  tablet: 900,\r\n};\r\n\r\nconst mediaQueries = key => {\r\n  return style => `@media (max-width: ${breakpoints[key]}px) { ${style} }`;\r\n};\r\n\r\nexport const PagingBoxStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 30px 50px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-top: 1px solid ${ColorStyle.g500};\r\n  /* button {\r\n    background: none;\r\n    border: none;\r\n    padding: 10px;\r\n    margin: 0;\r\n    font: inherit;\r\n    font-size: ${FontSize.strong};\r\n    color: ${props => (props.active ? ColorStyle.g900 : ColorStyle.g700)};\r\n    cursor: pointer;\r\n    &:hover {\r\n      color: ${ColorStyle.g900};\r\n      font-weight: bold;\r\n    }\r\n\r\n    ${mediaQueries(\"tablet\")`\r\n      &:not(:first-of-type):not(:last-of-type) {\r\n        &:nth-last-of-type(-n+3) { \r\n          display: none;\r\n        }\r\n      }\r\n    `}\r\n\r\n    ${mediaQueries(\"mobile\")`\r\n      &:not(:first-of-type):not(:last-of-type) {\r\n        &:nth-last-of-type(-n+7) {\r\n          display: none;\r\n        }\r\n      }\r\n    `}\r\n  } */\r\n`;\r\nexport const PagingNumStyle = styled.button`\r\n  background: none;\r\n  border: none;\r\n  padding: 10px;\r\n  margin: 0;\r\n  font-size: ${FontSize.strong};\r\n  color: ${props => (props.active ? ColorStyle.g800 : ColorStyle.g700)};\r\n  font-weight: ${props => (props.active ? \"bold\" : \"normal\")};\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: ${ColorStyle.g800};\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport const SearchStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 0 50px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 3px;\r\n  img {\r\n    width: 34px;\r\n    background: ${ColorStyle.g400};\r\n    cursor: pointer;\r\n  }\r\n  select {\r\n    position: relative;\r\n    appearance: none;\r\n    width: 92px;\r\n    height: 35px;\r\n    padding: 5px 20px;\r\n    border: 1px solid ${ColorStyle.g400};\r\n    font-size: ${FontSize.default};\r\n    color: ${ColorStyle.g500};\r\n    background: url(\"/assets/images/down.svg\") no-repeat right center;\r\n  }\r\n  input {\r\n    position: relative;\r\n    appearance: none;\r\n    width: 240px;\r\n    height: 35px;\r\n    padding: 5px 20px;\r\n    border: 1px solid ${ColorStyle.g400};\r\n    font-size: ${FontSize.default};\r\n    color: ${ColorStyle.g500};\r\n  }\r\n`;\r\n\r\nexport const TableFootStyle = styled.div`\r\n  position: relative;\r\n  margin-top: 50px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n","export const getNum = (check, init) => {\r\n  if (!check) {\r\n    return init;\r\n  }\r\n  return check;\r\n};\r\n","import {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport { getNum } from \"../util/utils\";\r\n\r\nconst useCustomMove = () => {\r\n  // path hook\r\n  const navigate = useNavigate();\r\n  // query 알아내기, 읽기\r\n  const [urlSearchParams, setUrlSearchPrams] = useSearchParams();\r\n  // 현재 page 번호\r\n  const page = urlSearchParams.get(\"page\")\r\n    ? parseInt(urlSearchParams.get(\"page\"))\r\n    : 1;\r\n  // 현재 search\r\n  const search = urlSearchParams.get(\"search\")\r\n    ? parseInt(urlSearchParams.get(\"search\"))\r\n    : \"\";\r\n  // querystring 만들기\r\n  const queryStrDefault = createSearchParams({ page, search }).toString();\r\n  // to list\r\n  const moveToList = pageParam => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, page);\r\n      // 쿼리 만들기\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryStrDefault;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n  // to modify\r\n  const moveToModify = num => {\r\n    navigate({ pathname: `../modify/${num}`, search: queryStrDefault });\r\n  };\r\n  // to read\r\n  const moveToRead = num => {\r\n    navigate({ pathname: `../read/${num}`, search: queryStrDefault });\r\n  };\r\n  return { moveToList, moveToModify, moveToRead, page, search };\r\n};\r\n\r\nexport default useCustomMove;\r\n","import React from \"react\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport { ColorStyle } from \"../../styles/common/CommonStyle\";\r\n\r\nconst Fetching = () => {\r\n  const laodingCss = {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    top: 0,\r\n    zIndex: 999,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(255,255,255,0.8)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"20px\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  };\r\n  return (\r\n    <div style={laodingCss}>\r\n      <ClipLoader size={50} color={ColorStyle.primary} loading={true} />\r\n      <div\r\n        style={{\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"25px\",\r\n        }}\r\n      >\r\n        맛있게 굽고 있는 중...\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fetching;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const TagStyle = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 3px 5px;\r\n  background: #fff;\r\n  border: 1px solid ${ColorStyle.secondary};\r\n  border-radius: 10px;\r\n  span {\r\n    color: ${ColorStyle.primary};\r\n    font-size: ${FontSize.tag};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { TagStyle } from \"./styles/TagStyle\";\r\n\r\nconst Tag = props => {\r\n  const { tagtext } = props;\r\n\r\n  return (\r\n    <TagStyle>\r\n      <span>{tagtext}</span>\r\n    </TagStyle>\r\n  );\r\n};\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport { SearchStyle } from \"./styles/ListStyle\";\r\n\r\nconst Search = () => {\r\n  return (\r\n    <SearchStyle>\r\n      <select className=\"select\">\r\n        <option value={0}>전체</option>\r\n        <option value={1}>제목</option>\r\n        <option value={2}>내용</option>\r\n      </select>\r\n      <div className=\"searchBox\">\r\n        <input placeholder=\"제목 또는 내용을 검색해보세요\" />\r\n      </div>\r\n      <div className=\"icon\">\r\n        <img src=\"/assets/images/search.svg\" alt=\"search\" />\r\n      </div>\r\n    </SearchStyle>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport {\r\n  InfoStyle,\r\n  TableStyle,\r\n  TitleStyle,\r\n  TnoStyle,\r\n} from \"./styles/ListStyle\";\r\n\r\nconst Thead = () => {\r\n  return (\r\n    <TableStyle>\r\n      <TnoStyle>번호</TnoStyle>\r\n      <TitleStyle justifyContent=\"center\">제목</TitleStyle>\r\n      <InfoStyle>\r\n        <div>작성자</div>\r\n        <div>작성일</div>\r\n        {/* <div>조회수</div> */}\r\n      </InfoStyle>\r\n    </TableStyle>\r\n  );\r\n};\r\n\r\nexport default Thead;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getList } from \"../../api/communityApi\";\r\nimport { ColorStyle } from \"../../styles/common/CommonStyle\";\r\nimport Button from \"../button/Button\";\r\nimport Fetching from \"../common/Fetching\";\r\nimport Paging from \"../common/Paging\";\r\nimport useCustomMove from \"../hooks/useCustomMove\";\r\nimport Tag from \"../tag/Tag\";\r\nimport Search from \"./Search\";\r\nimport Thead from \"./Thead\";\r\nimport {\r\n  BtnStyle,\r\n  ContentInfoStyle,\r\n  ContentStyle,\r\n  ImgStyle,\r\n  InfoStyle,\r\n  LargeImgStyle,\r\n  NameStyle,\r\n  SummaryStyle,\r\n  TableFootStyle,\r\n  TagBoxStyle,\r\n  ThumbnailStyle,\r\n  TitleStyle,\r\n  TnoStyle,\r\n  TopenStyle,\r\n  TtableStyle,\r\n  UserStyle,\r\n  WrapStyle,\r\n} from \"./styles/ListStyle\";\r\n\r\n// 서버데이터 초기값 배열\r\nconst initState = [\r\n  {\r\n    iboard: 0,\r\n    boardNum: 0,\r\n    iuser: 0,\r\n    writerName: \"\",\r\n    title: \"\",\r\n    contents: \"\",\r\n    pics: [\"\"],\r\n  },\r\n];\r\n\r\nconst List = () => {\r\n  // 커스텀 훅\r\n  const { page, search, moveToRead } = useCustomMove();\r\n  // 서버 데이터 내용 상태 변경\r\n  const [serverData, setServerData] = useState(initState);\r\n  // 해당 글로 상태 변경\r\n  const [topenIboard, setTopenIboard] = useState({});\r\n  // 해당 글 미리보기 내용 상태 변경\r\n  const [preview, setPreview] = useState({\r\n    iboard: 0,\r\n    boardNum: 0,\r\n    iuser: 0,\r\n    writerName: \"\",\r\n    title: \"\",\r\n    createdAt: \"\",\r\n    contents: \"\",\r\n    pics: [\"\"],\r\n  });\r\n  // 로딩창\r\n  const [fetching, setFetching] = useState(false);\r\n\r\n  // page에 따라 최초 데이터 가져오기\r\n  useEffect(() => {\r\n    const param = { page, search };\r\n    getList({ param, successFn, failFn, errorFn });\r\n  }, [page, search]);\r\n\r\n  // 데이터 연동 처리 결과\r\n  const successFn = result => {\r\n    setServerData(result);\r\n    setFetching(false);\r\n    console.log(result);\r\n  };\r\n  const failFn = result => {\r\n    setFetching(false);\r\n    console.log(result);\r\n  };\r\n  const errorFn = result => {\r\n    setFetching(false);\r\n    console.log(result);\r\n  };\r\n\r\n  // 해당 글 클릭 시 미리보기 함수정의\r\n  const handleClickTopen = item => {\r\n    if (topenIboard === item.iboard) {\r\n      setTopenIboard(null); // 이미 선택된 항목을 다시 클릭하면 미리보기를 닫습니다.\r\n    } else {\r\n      setTopenIboard(item.iboard); // 다른 항목을 클릭하면 그 항목의 미리보기를 엽니다.\r\n      setPreview({\r\n        iboard: item.iboard,\r\n        boardNum: item.boardNum,\r\n        iuser: item.iuser,\r\n        writerName: item.writerName,\r\n        title: item.title,\r\n        createdAt: item.createdAt,\r\n        contents: item.contents,\r\n        pics: item.pics,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WrapStyle>\r\n      {fetching ? <Fetching /> : null}\r\n      <Thead />\r\n      {/* 게시글 목록 보기 */}\r\n      {serverData.map(item => (\r\n        <div key={item.iboard}>\r\n          <TtableStyle\r\n            selected={topenIboard === item.iboard}\r\n            onClick={() => {\r\n              handleClickTopen(item);\r\n            }}\r\n          >\r\n            <TnoStyle color={ColorStyle.g700}>{item.boardNum}</TnoStyle>\r\n            <TitleStyle>{item.title}</TitleStyle>\r\n            <InfoStyle color={ColorStyle.g700}>\r\n              <div>{item.writerName}</div>\r\n              <div>{item.createdAt}</div>\r\n              {/* <div>조회수</div> */}\r\n            </InfoStyle>\r\n          </TtableStyle>\r\n\r\n          {/* 해당 글 미리보기 */}\r\n          {topenIboard === item.iboard && (\r\n            <TopenStyle>\r\n              <ImgStyle>\r\n                <LargeImgStyle>\r\n                  <img src={preview.pics[0]} alt=\"img_1\" />\r\n                </LargeImgStyle>\r\n                <ThumbnailStyle>\r\n                  <div className=\"thumbnail\">\r\n                    <img src={preview.pics[1]} alt=\"img_2\" />\r\n                  </div>\r\n                  <div className=\"thumbnail\">\r\n                    <img src={preview.pics[2]} alt=\"img_3\" />\r\n                  </div>\r\n                  <div className=\"thumbnail\">\r\n                    <img src={preview.pics[3]} alt=\"img_4\" />\r\n                  </div>\r\n                  <div className=\"thumbnail\">\r\n                    <img src={preview.pics[4]} alt=\"img_5\" />\r\n                  </div>\r\n                </ThumbnailStyle>\r\n              </ImgStyle>\r\n              <ContentInfoStyle>\r\n                <ContentStyle>\r\n                  <UserStyle>\r\n                    <img src=\"/assets/images/avatar.svg\" alt=\"프로필사진\" />\r\n                    <NameStyle>\r\n                      <div>{preview.writerName}</div>\r\n                      {/* 더미 태그 */}\r\n                      <TagBoxStyle>\r\n                        <Tag tagtext=\"#동성로\" />\r\n                        <Tag tagtext=\"#모듬한판\" />\r\n                        <Tag tagtext=\"#퇴근길\" />\r\n                      </TagBoxStyle>\r\n                    </NameStyle>\r\n                  </UserStyle>\r\n                  <SummaryStyle>{preview.contents}</SummaryStyle>\r\n                </ContentStyle>\r\n                <BtnStyle>\r\n                  <div\r\n                    onClick={() => {\r\n                      moveToRead();\r\n                    }}\r\n                  >\r\n                    <Button bttext=\"더보기\" />\r\n                  </div>\r\n                </BtnStyle>\r\n              </ContentInfoStyle>\r\n            </TopenStyle>\r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      {/* 페이지네이션 */}\r\n      <Paging totalItems={87} />\r\n      <Search />\r\n      <TableFootStyle>\r\n        <Button bttext=\"글쓰기\" />\r\n      </TableFootStyle>\r\n    </WrapStyle>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport List from \"../../components/community/List\";\r\n\r\n// 글 목록 페이지입니다.\r\nconst ListPage = () => {\r\n  return (\r\n    <div>\r\n      <List />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListPage;\r\n"],"names":["host","concat","getList","async","param","successFn","failFn","errorFn","_ref","res","axios","get","params","status","toString","charAt","console","log","data","error","props","bttext","_jsx","DefaultBt","children","styled","button","_templateObject","_taggedTemplateLiteral","ColorStyle","primary","initState","iboard","boardNum","iuser","writerName","title","contents","pics","totalItems","itemPerPage","page","search","moveToList","useCustomMove","setBoardNum","useState","useEffect","result","totalPages","setTotalPages","currentPage","setCurrentPage","pageNumbers","setPageNumbers","pageLimit","setPageLimit","maxPageLimit","setMaxPageLimit","minPageLimit","setMinpageLimit","pages","Math","ceil","numbers","Array","from","length","_","i","navigate","useNavigate","searchParams","setSerchParams","useSearchParams","renderPageNumbers","slice","_jsxs","PagingBoxStyle","PagingNumStyle","onClick","handlePrev","prev","disabled","map","number","pageNum","set","active","handleNext","WrapStyle","div","TableStyle","_templateObject2","FontSize","strong","TtableStyle","_templateObject3","g500","selected","g200","TnoStyle","_templateObject4","color","TitleStyle","_templateObject5","justifyContent","InfoStyle","_templateObject6","TopenStyle","_templateObject7","ImgStyle","_templateObject8","LargeImgStyle","_templateObject9","ThumbnailStyle","_templateObject10","ContentInfoStyle","_templateObject11","ContentStyle","_templateObject12","UserStyle","_templateObject13","NameStyle","_templateObject14","g900","TagBoxStyle","_templateObject15","SummaryStyle","_templateObject16","g600","BtnStyle","_templateObject17","breakpoints","mobile","tablet","mediaQueries","key","style","_templateObject18","g700","_templateObject19","_templateObject20","_templateObject21","g800","SearchStyle","_templateObject22","g400","default","TableFootStyle","_templateObject23","urlSearchParams","setUrlSearchPrams","parseInt","queryStrDefault","createSearchParams","pageParam","queryStr","check","init","getNum","pathname","moveToModify","num","moveToRead","Fetching","position","left","top","zIndex","width","height","background","display","flexDirection","gap","alignItems","ClipLoader","size","loading","fontFamily","fontSize","TagStyle","secondary","tag","tagtext","Search","className","value","placeholder","src","alt","Thead","List","serverData","setServerData","topenIboard","setTopenIboard","preview","setPreview","createdAt","fetching","setFetching","item","handleClickTopen","Tag","Button","Paging","ListPage"],"sourceRoot":""}