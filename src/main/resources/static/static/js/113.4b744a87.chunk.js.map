{"version":3,"file":"static/js/113.4b744a87.chunk.js","mappings":"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","sources":["api/MyApi.js","api/meatApi.js","components/button/Button.js","components/button/styles/ButtonStyle.js","components/common/ResultModal.js","hooks/useModal.js","pages/my/styles/MyModifyPageStyle.js","pages/my/MyModifyPage.js","util/tokenUtil.js"],"sourcesContent":["import authAxios from \"../util/tokenUtil\";\r\n\r\nexport const API_SERVER_HOST = \"\";\r\nconst host = `${API_SERVER_HOST}/api`;\r\n\r\n// 마이페이지 : 예약 내역 가져오기 (GET)\r\nexport const getMyBook = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.get(`${host}/user/reservation`, {\r\n      params: param,\r\n    });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"예약 내역 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"예약 내역 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 예약 내역 변경하기 (PUT)\r\nexport const putMyBook = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.put(`${host}/reservation`, {\r\n      params: param,\r\n    });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"예약 변경 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"예약 변경 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 예약 내역 삭제하기 (PATCH)\r\nexport const patchMyBook = async ({\r\n  patchBookForm,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  const data = {\r\n    checkShop: patchBookForm.checkShop,\r\n    ireview: patchBookForm.ireview,\r\n  };\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.patch(`${host}/reservation`, {\r\n      ...header,\r\n      data: data,\r\n    });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"예약 내역 완전 삭제 성공\");\r\n      successFn(res.data);\r\n      return res.data;\r\n    } else {\r\n      failFn(\"예약 내역 삭제 오류\");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"서버 완전 오류\");\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// 마이페이지 : 북마크 내역 가져오기 (GET)\r\nexport const getMyList = async ({ param, successFn, failFn, errorFn }) => {\r\n  console.log(\"parameter :\", param);\r\n  try {\r\n    const res = await authAxios.get(`${host}/user/bookmark`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"북마크 내역 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"북마크 내역 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 리뷰 내역 가져오기 (GET)\r\nexport const getMyReview = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.get(`${host}/user/review`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"리뷰 내역 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"리뷰 내역 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 리뷰 내역 삭제하기 (DELETE)\r\nexport const deleteMyReview = async ({\r\n  deleteForm,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  console.log(\"폼\", deleteForm);\r\n  // console.log(\"log\", data);\r\n  const data = {\r\n    checkShop: deleteForm.checkShop,\r\n    ireview: deleteForm.ireview,\r\n  };\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.delete(`${host}/user/review`, {\r\n      ...header,\r\n      data: data,\r\n    });\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"리뷰 내역 삭제 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"리뷰 내역 삭제 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 유저 정보 가져오기 (GET)\r\nexport const getUserInfo = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await authAxios.get(`${host}/user`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"유저 정보 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"유저 정보 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    console.log(\"서버 오류\");\r\n  }\r\n};\r\n\r\n// 마이페이지 : 유저 정보 수정하기 (PUT) 안됨 ㅎㅎ\r\nexport const putUserInfo = async ({ userData, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n    const res = await authAxios.put(`${host}/user`, userData, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"유저 정보 수정 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"유저 정보 수정 오류\", res.statusText);\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n    if (error.response) {\r\n      console.log(\"서버 응답 오류\", error.response.data);\r\n      errorFn(\"유저 정보 수정 서버 오류: \", error.response.data);\r\n    } else {\r\n      errorFn(\"유저 정보 수정 서버 오류\");\r\n    }\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport authAxios from \"../util/tokenUtil\";\r\n\r\nexport const API_SERVER_HOST = \"\";\r\nconst host = `${API_SERVER_HOST}/api`;\r\n\r\n// 0이 아니면 로그인 0이면 로그아웃 상태 true = 로그아웃 상태 / false = 로그인 상태\r\n\r\n//! GET Meat List Page\r\nexport const getGList = async ({ param, successFn, failFn, errorFn }) => {\r\n  console.log(\"파라미터\", param);\r\n  try {\r\n    const res = await axios.get(`${host}/shop`, { params: param });\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"목록 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"목록 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n// Auth test\r\nexport const getGInfo = async ({\r\n  isLogin,\r\n  ishop,\r\n  successFn,\r\n  failFn,\r\n  errorFn,\r\n}) => {\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const axiosInstance = isLogin ? authAxios : axios;\r\n    const res = await axiosInstance.get(`${host}/shop/${ishop}`, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      console.log(\"목록 호출 성공\");\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"목록 호출 오류\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n\r\n// ! Post Reservation (/gogi/reservation)\r\nexport const postReser = async ({ reserData, successFn, failFn, errorFn }) => {\r\n  console.log(\"레저데이따\", reserData);\r\n  try {\r\n    //\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.post(`${host}/reservation`, reserData, header);\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(\"\");\r\n    //\r\n  }\r\n};\r\n\r\nexport const changeBookmark = async storeNum => {\r\n  try {\r\n    //\r\n    const data = {\r\n      ishop: storeNum,\r\n    };\r\n    const header = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const res = await authAxios.post(`${host}/shop/bookmark`, data, header);\r\n    console.log(\"check\", res.data);\r\n  } catch (error) {\r\n    console.log(error);\r\n    //\r\n  }\r\n};\r\n\r\nexport const postReview = async ({ product, successFn, failFn, errorFn }) => {\r\n  console.log(\"axios\", product);\r\n\r\n  try {\r\n    const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n\r\n    const res = await authAxios.post(\r\n      `${API_SERVER_HOST}/shop`,\r\n      product,\r\n      header,\r\n    );\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"글 등록 오류\", res.statusText);\r\n    }\r\n  } catch (error) {\r\n    console.log(\"글 등록 서버오류\", error.response.data);\r\n    errorFn(\"글 등록 서버오류\", error.response.data);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { DefaultBt } from \"./styles/ButtonStyle\";\r\n\r\nconst Button = props => {\r\n  const { bttext } = props;\r\n\r\n  return (\r\n    <DefaultBt>\r\n      <span>{bttext}</span>\r\n    </DefaultBt>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const DefaultBt = styled.button`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  gap: 10px;\r\n  background: #fff;\r\n  border: 2px solid #066e52;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  span {\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: 19px;\r\n    text-align: center;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    color: ${ColorStyle.primary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Button from \"../button/Button\";\r\n\r\n// 타이틀, 내용, 확인버튼 클릭시 콜백 함수\r\nconst ResultModal = ({ title, content, callFn }) => {\r\n  const popstyle = {\r\n    position: \"fixed\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.7)\",\r\n    zIndex: 999,\r\n  };\r\n  return (\r\n    <div style={popstyle}>\r\n      <div\r\n        style={{\r\n          background: \"#fff\",\r\n          textAlign: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"20px\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n          width: \"300px\",\r\n          borderRadius: \"10px\",\r\n          fontFamily: \"DAEAM_LEE_TAE_JOON\",\r\n          fontSize: \"19px\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingBottom: \"5px\",\r\n            borderBottom: \"1px dashed #8f8f8f\",\r\n          }}\r\n        >\r\n          {content}\r\n        </div>\r\n        <div onClick={callFn}>\r\n          <Button bttext=\"확인\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultModal;\r\n","import React, { useState } from \"react\";\r\n\r\n// 모달 창 열림, 닫힘 관리\r\nconst useModal = () => {\r\n  const [useResultModal, setUseResultModal] = useState(false);\r\n\r\n  // 창 열림\r\n  const openModal = () => {\r\n    setUseResultModal(true);\r\n  };\r\n\r\n  // 창 닫힘\r\n  const closeModal = () => {\r\n    setUseResultModal(false);\r\n  };\r\n\r\n  return { useResultModal, openModal, closeModal };\r\n};\r\n\r\nexport default useModal;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MyModifyPageWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const MyModifyPageTitle = styled.div`\r\n  position: relative;\r\n  font-family: DAEAM_LEE_TAE_JOON;\r\n  font-size: 24px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  margin-top: 8px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport const MyModifyPageProfile = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ProfileImg = styled.div`\r\n  position: relative;\r\n  img {\r\n    width: 280px;\r\n    height: 280px;\r\n    border-radius: 250px;\r\n  }\r\n  button {\r\n    position: absolute;\r\n    left: 77%;\r\n    top: 77%;\r\n    width: 56px;\r\n    height: 56px;\r\n    border: none;\r\n    border-radius: 250px;\r\n    background-color: #fff;\r\n    cursor: pointer;\r\n    box-shadow: 0px 3px 3px 0px rgba(0, 0, 0, 0.25);\r\n    img {\r\n      width: 100%;\r\n      height: 30px;\r\n      object-fit: fill;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MyNickName = styled.div`\r\n  position: relative;\r\n  font-family: DAEAM_LEE_TAE_JOON;\r\n  font-size: 24px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const MyModifyPageInfo = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: Pretendard;\r\n  font-size: 19px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  margin-top: 50px;\r\n  span {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const MyModifyPageForm = styled.form`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: Pretendard;\r\n  font-size: 19px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  span {\r\n    margin-bottom: 20px;\r\n  }\r\n  input {\r\n    border: none;\r\n    border-bottom: 1px solid #000;\r\n    background-color: none;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const MyModifyPageButton = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 30px;\r\n  margin-top: 50px;\r\n  button {\r\n    width: 265px !important;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  MyModifyPageButton,\r\n  MyModifyPageForm,\r\n  MyModifyPageInfo,\r\n  MyModifyPageProfile,\r\n  MyModifyPageTitle,\r\n  MyModifyPageWrapper,\r\n  MyNickName,\r\n  ProfileImg,\r\n} from \"./styles/MyModifyPageStyle\";\r\nimport Button from \"../../components/button/Button\";\r\nimport { getUserInfo, putUserInfo } from \"../../api/MyApi\";\r\nimport useModal from \"../../hooks/useModal\";\r\nimport ResultModal from \"../../components/common/ResultModal\";\r\n\r\n// 프로필 정보 초기값\r\nconst initialProfile = {\r\n  email: \"\",\r\n  name: \"\",\r\n  nickname: \"\",\r\n  birth: \"\",\r\n  gender: \"\",\r\n  address: \"\",\r\n  pic: \"\",\r\n  tel: \"\",\r\n};\r\n\r\n// 프로필 수정 페이지\r\nconst MyModifyPage = () => {\r\n  const [myProfileData, setMyProfileData] = useState(initialProfile);\r\n  const [fetching, setFetching] = useState(false);\r\n  const [result, setResult] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [modifiedNickname, setModifiedNickname] = useState(\"\");\r\n  const [modifiedAddress, setModifiedAddress] = useState(\"\");\r\n  const [modifiedPhoneNumber, setModifiedPhoneNumber] = useState(\"\");\r\n  const [isModified, setIsModified] = useState(false);\r\n\r\n  // 유저 정보 불러오기 (GET)\r\n  useEffect(() => {\r\n    const param = {};\r\n    getUserInfo({ param, successFn, failFn, errorFn });\r\n  }, []);\r\n\r\n  const successFn = result => {\r\n    setMyProfileData(result);\r\n    console.log(result);\r\n  };\r\n  const failFn = result => {\r\n    console.log(result);\r\n  };\r\n  const errorFn = result => {\r\n    console.log(result);\r\n  };\r\n\r\n  // 프로필 이미지 업로드\r\n  const handleImageChange = e => {\r\n    const file = e.target.files[0];\r\n    setSelectedImage(file);\r\n  };\r\n\r\n  // input 휴대폰 번호 부분 (11자리 숫자만 입력 가능하도록 제한)\r\n  const handlePhoneNumberChange = e => {\r\n    const value = e.target.value.replace(/[^0-9]/g, \"\").slice(0, 11);\r\n    e.target.value = value;\r\n  };\r\n\r\n  // 유저 정보 수정 (PUT) 안됨 고쳐야됨 뭘고쳐하지\r\n  const handleChangeUser = async () => {\r\n    try {\r\n      const userData = {\r\n        pic: \"\", // 이미지는 스웨거에 없어서 빈 문자열로 처리\r\n        dto: {\r\n          nickname: isModified ? modifiedNickname : myProfileData.nickname,\r\n          address: isModified ? modifiedAddress : myProfileData.address,\r\n          pic: \"\", // 이미지는 스웨거에 없어서 빈 문자열로 처리\r\n          tel: isModified ? modifiedPhoneNumber : myProfileData.tel,\r\n        },\r\n      };\r\n\r\n      setFetching(true);\r\n      await putUserInfo({\r\n        myProfileData: userData,\r\n        successFn: successFnMyModify,\r\n        failFn: failFnMyModify,\r\n        errorFn: errorFnMyModify,\r\n      });\r\n\r\n      const getUserInfoResult = await getUserInfo({ param: {} });\r\n\r\n      if (getUserInfoResult) {\r\n        setMyProfileData(getUserInfoResult);\r\n        console.log(\r\n          \"프로필 수정 후 유저 정보 다시 불러오기 성공\",\r\n          getUserInfoResult,\r\n        );\r\n      } else {\r\n        console.log(\"프로필 수정 후 유저 정보 다시 불러오기 실패\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"프로필 수정 오류\", error);\r\n    } finally {\r\n      setFetching(false);\r\n    }\r\n  };\r\n\r\n  const successFnMyModify = result => {\r\n    console.log(\"프로필 수정 성공\", result);\r\n    setResult(true);\r\n  };\r\n\r\n  const failFnMyModify = result => {\r\n    console.log(\"프로필 수정 실패\", result);\r\n    setResult(false);\r\n  };\r\n\r\n  const errorFnMyModify = result => {\r\n    console.log(\"프로필 수정 실패\", result);\r\n    setResult(true);\r\n  };\r\n  // 여기까지 정보 수정 ㅋㅋㅋ 안됨...\r\n\r\n  // 모달창\r\n  const { useResultModal, openModal, closeModal } = useModal();\r\n  const handleDeleteUser = () => {\r\n    openModal();\r\n  };\r\n\r\n  return (\r\n    <MyModifyPageWrapper>\r\n      <MyModifyPageTitle>\r\n        <span>프로필 수정</span>\r\n      </MyModifyPageTitle>\r\n      <MyModifyPageProfile>\r\n        <ProfileImg>\r\n          <img src=\"\" alt=\"\"></img>\r\n          <label htmlFor=\"imageUpload\">\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/assets/images/profile_camera.svg`}\r\n              alt=\"Upload Icon\"\r\n            />\r\n          </label>\r\n          <input\r\n            id=\"imageUpload\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleImageChange}\r\n          />\r\n        </ProfileImg>\r\n        <MyNickName>{myProfileData.nickname}</MyNickName>\r\n      </MyModifyPageProfile>\r\n      <MyModifyPageInfo>\r\n        <p>이름</p>\r\n        <span>{myProfileData.name}</span>\r\n        <p>성별</p>\r\n        <span>{myProfileData.gender}</span>\r\n        <p>생년월일</p>\r\n        <span>{myProfileData.birth}</span>\r\n        <p>이메일</p>\r\n        <span>{myProfileData.email}</span>\r\n      </MyModifyPageInfo>\r\n      <MyModifyPageForm>\r\n        <p>휴대폰 번호</p>\r\n        <span>{isModified ? modifiedPhoneNumber : myProfileData.tel}</span>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"변경할 휴대폰 번호를 입력하세요.\"\r\n          onChange={handlePhoneNumberChange}\r\n        />\r\n        <p>닉네임</p>\r\n        <span>{isModified ? modifiedNickname : myProfileData.nickname}</span>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"변경할 닉네임을 입력하세요.\"\r\n          value={modifiedNickname}\r\n          onChange={e => setModifiedNickname(e.target.value)}\r\n        />\r\n        <p>주소</p>\r\n        <span>{isModified ? modifiedAddress : myProfileData.address}</span>\r\n        <Button bttext=\"우편번호 찾기\" />\r\n        <input type=\"text\" placeholder=\"변경할 주소를 입력하세요.\" />\r\n      </MyModifyPageForm>\r\n      <MyModifyPageButton>\r\n        <div\r\n          onClick={() => {\r\n            handleChangeUser();\r\n          }}\r\n        >\r\n          <Button bttext=\"저장하기\"></Button>\r\n        </div>\r\n        <div\r\n          onClick={() => {\r\n            handleDeleteUser();\r\n          }}\r\n        >\r\n          <Button bttext=\"회원탈퇴\"></Button>\r\n        </div>\r\n        {useResultModal && (\r\n          <ResultModal\r\n            title=\"회원 탈퇴\"\r\n            content=\"모든 회원 정보가 삭제됩니다.\"\r\n            callFn={() => {\r\n              closeModal();\r\n            }}\r\n          />\r\n        )}\r\n      </MyModifyPageButton>\r\n    </MyModifyPageWrapper>\r\n  );\r\n};\r\n\r\nexport default MyModifyPage;\r\n","import axios from \"axios\";\r\nimport { getCookie, setCookie } from \"./CookiesUtil\";\r\nimport { API_SERVER_HOST } from \"../api/meatApi\";\r\nconst authAxios = axios.create();\r\n\r\nconst beforeReq = config => {\r\n  console.log(\"전달\", config);\r\n  const memberInfo = getCookie(\"member\");\r\n  console.log(\"get Token : \", memberInfo);\r\n  if (!memberInfo) {\r\n    console.log(\"not found cookie info\");\r\n    return Promise.reject({ response: { data: { error: \"please login\" } } });\r\n  }\r\n  console.log(\"toke info\");\r\n  const { accessToken } = memberInfo;\r\n  console.log(\"acessToken : \", accessToken);\r\n  config.headers.Authorization = `Bearer ${accessToken}`;\r\n  return config;\r\n};\r\n\r\nconst requestFail = error => {\r\n  console.log(\"request fail :\", error);\r\n  return Promise.reject(error);\r\n};\r\n\r\nconst rToken = async (accessToken, refreshToken) => {\r\n  const host = API_SERVER_HOST;\r\n  const header = { headers: { Authorization: `Bearer ${accessToken}` } };\r\n  const res = await axios.get(`${host}/api/user/refresh-token`, header);\r\n  console.log(\"required token\");\r\n  console.log(\"new data :\", res.data);\r\n  return res.data;\r\n};\r\n\r\nconst beforeRes = async res => {\r\n  console.log(\"Response 전처리 ....\", res);\r\n  const data = res.data;\r\n  console.log(\"1. Response 오기전 서버 전달해준 데이터\", data);\r\n  if (data && data.error === \"ERROR_ACCESS_TOKEN\") {\r\n    console.log(\"2. 일반적 오류가 아닌 액세스 토큰 에러!! 입니다. \");\r\n    console.log(\"3. 새로운 토큰을 요청해야 합니다. \");\r\n    console.log(\"4. 쿠키에 있는 정보를 읽어서, 다시 시도합니다.\");\r\n    const memberInfo = getCookie(\"member\");\r\n    console.log(\"5. 쿠키 토큰 정보 AccessToken \", memberInfo.accessToken);\r\n    console.log(\"6. 쿠키 토큰 정보 RefreshToken \", memberInfo.refreshToken);\r\n    console.log(\"7. 위의 정보로 새로운 토큰을 요청합니다.\");\r\n    const result = await rToken(\r\n      memberInfo.accessToken,\r\n      memberInfo.refreshToken,\r\n    );\r\n    console.log(\"8. 요청 이후 되돌아와서 새로운 정보로 쿠키를 업데이트 \");\r\n    (memberInfo.accessToken = result.accessToken),\r\n      (memberInfo.refreshToken = result.refreshToken),\r\n      setCookie(\"member\", JSON.stringify(memberInfo));\r\n\r\n    console.log(\"9. 데이터 요청하던 API 재 요청\");\r\n    const originalRequest = res.config;\r\n    originalRequest.headers.Authorization = `Bearer ${result.accessToken}`;\r\n\r\n    return await axios(originalRequest);\r\n  }\r\n\r\n  return res;\r\n};\r\nconst resFail = error => {\r\n  console.log(\"res fail : \", error);\r\n  return Promise.reject(error);\r\n};\r\n\r\nauthAxios.interceptors.request.use(beforeReq, requestFail);\r\nauthAxios.interceptors.response.use(beforeRes, resFail);\r\n\r\nexport default authAxios;\r\n"],"names":["host","concat","getMyBook","async","param","successFn","failFn","errorFn","_ref","res","authAxios","get","params","status","toString","charAt","console","log","data","error","patchMyBook","patchBookForm","_ref3","checkShop","ireview","header","headers","patch","getMyList","_ref4","getMyReview","_ref5","deleteMyReview","deleteForm","_ref6","delete","getUserInfo","_ref7","putUserInfo","userData","_ref8","put","statusText","response","API_SERVER_HOST","getGList","axios","getGInfo","isLogin","ishop","_ref2","axiosInstance","postReser","reserData","post","changeBookmark","storeNum","postReview","product","props","bttext","_jsx","DefaultBt","children","styled","button","_templateObject","_taggedTemplateLiteral","ColorStyle","primary","title","content","callFn","style","position","display","alignItems","justifyContent","left","top","width","height","background","zIndex","_jsxs","textAlign","flexDirection","gap","padding","borderRadius","fontFamily","fontSize","paddingBottom","borderBottom","onClick","Button","useModal","useResultModal","setUseResultModal","useState","openModal","closeModal","MyModifyPageWrapper","div","MyModifyPageTitle","_templateObject2","MyModifyPageProfile","_templateObject3","ProfileImg","_templateObject4","MyNickName","_templateObject5","MyModifyPageInfo","_templateObject6","MyModifyPageForm","form","_templateObject7","MyModifyPageButton","_templateObject8","initialProfile","email","name","nickname","birth","gender","address","pic","tel","MyModifyPage","myProfileData","setMyProfileData","fetching","setFetching","result","setResult","selectedImage","setSelectedImage","modifiedNickname","setModifiedNickname","modifiedAddress","setModifiedAddress","modifiedPhoneNumber","setModifiedPhoneNumber","isModified","setIsModified","useEffect","successFnMyModify","failFnMyModify","errorFnMyModify","src","alt","htmlFor","process","id","type","accept","onChange","e","file","target","files","placeholder","value","replace","slice","dto","getUserInfoResult","handleChangeUser","ResultModal","create","interceptors","request","use","config","memberInfo","getCookie","Promise","reject","accessToken","Authorization","refreshToken","rToken","setCookie","JSON","stringify","originalRequest"],"sourceRoot":""}