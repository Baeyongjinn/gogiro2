{"version":3,"file":"static/js/713.13111755.chunk.js","mappings":"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","sources":["components/titleheader/styles/TitleHeaderStyle.js","components/titleheader/TitleHeader.js","pages/login/styles/LoginPageStyle.js","pages/login/LoginPage.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const TitleHeaderWrapper = styled.div`\r\n  position: relative;\r\n  img {\r\n    width: 100%;\r\n    height: 215px;\r\n    object-fit: cover;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const TitleHeaderInfo = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TitleName = styled.span`\r\n  position: relative;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.main_title};\r\n  color: ${ColorStyle.grayScale};\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const TitleContent = styled.span`\r\n  position: relative;\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  font-size: ${FontSize.sub_title};\r\n  color: ${ColorStyle.grayScale};\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  TitleContent,\r\n  TitleHeaderInfo,\r\n  TitleHeaderWrapper,\r\n  TitleName,\r\n} from \"./styles/TitleHeaderStyle\";\r\n\r\nconst TitleHeader = props => {\r\n  const { timg, tname, tcontent } = props;\r\n\r\n  return (\r\n    <TitleHeaderWrapper>\r\n      <img src={timg} alt=\"타이틀 헤더 이미지\"></img>\r\n      <TitleHeaderInfo>\r\n        <TitleName>{tname}</TitleName>\r\n        <TitleContent>{tcontent}</TitleContent>\r\n      </TitleHeaderInfo>\r\n    </TitleHeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default TitleHeader;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LoginPageWrap = styled.div`\r\n  position: relative;\r\n  display: block;\r\n`;\r\n\r\nexport const LoginPageMain = styled.div`\r\n  font-family: \"DAEAM_LEE_TAE_JOON\";\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap; /* 아이템을 여러 줄에 걸쳐 배치 */\r\n  justify-content: center; /* 가로 방향 중앙 정렬 */\r\n  align-items: center;\r\n  padding-top: 140px;\r\n  padding-bottom: 180px;\r\n`;\r\n\r\nexport const LoginPageInfo = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  font-size: 20px;\r\n  gap: 35px;\r\n`;\r\n\r\nexport const LoginPageID = styled.input`\r\n  position: relative;\r\n  padding-bottom: 15px;\r\n  display: block;\r\n  width: 500px;\r\n  height: 40px;\r\n  border: none;\r\n  border-bottom: 1px solid #5c5c5c;\r\n`;\r\n\r\nexport const LoginPagePW = styled.input`\r\n  position: relative;\r\n  padding-bottom: 15px;\r\n  display: block;\r\n  width: 500px;\r\n  height: 40px;\r\n  border: none;\r\n  border-bottom: 1px solid #5c5c5c;\r\n`;\r\n\r\nexport const LoginPageCheckbox = styled.div`\r\n  position: relative;\r\n  display: block;\r\n  width: 500px;\r\n  padding-top: 12px;\r\n  font-size: 19px;\r\n`;\r\n\r\nexport const LoginPageBts = styled.div`\r\n  position: relative;\r\n  display: inline-flex;\r\n  padding-top: 40px;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 20px;\r\n\r\n  .Loginbutton {\r\n    position: relative;\r\n    border: 1px solid #066e52;\r\n    font-size: 19px;\r\n    color: #d60117;\r\n    border-radius: 20px;\r\n    background-color: #ffffff;\r\n    width: 500px;\r\n    height: 55px;\r\n    padding: 10px 20px;\r\n  }\r\n  .Joinbutton {\r\n    position: relative;\r\n    border: 1px solid #066e52;\r\n    font-size: 19px;\r\n    border-radius: 20px;\r\n    color: #ffffff;\r\n    background-color: #066e52;\r\n    width: 500px;\r\n    height: 55px;\r\n    padding: 10px 20px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useCustomHook from \"../../components/meat/hooks/useCustomHook\";\r\nimport useCustomLogin from \"../../components/meat/hooks/useCustomLogin\";\r\nimport TitleHeader from \"../../components/titleheader/TitleHeader\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport \"../login/LoginPage.css\";\r\nimport {\r\n  LoginPageBts,\r\n  LoginPageCheckbox,\r\n  LoginPageID,\r\n  LoginPageInfo,\r\n  LoginPageMain,\r\n  LoginPagePW,\r\n  LoginPageWrap,\r\n} from \"./styles/LoginPageStyle\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ResultModal from \"../../components/common/ResultModal\";\r\n\r\n// 로그인 페이지입니다.\r\n\r\n// const initState = {\r\n//   id: \"\",\r\n//   password: \"\",\r\n// };\r\n\r\nconst initState = {\r\n  email: \"\",\r\n  upw: \"\",\r\n};\r\nconst LoginPage = () => {\r\n  const [authParam, setAuthParam] = useState(initState);\r\n  const { doLogin, moveToPath, loginComplete } = useCustomLogin();\r\n  const { isModal, openModal, closeModal } = useCustomHook();\r\n  const navigate = useNavigate();\r\n  const handleChange = e => {\r\n    authParam[e.target.name] = e.target.value;\r\n    setAuthParam({ ...authParam });\r\n  };\r\n  const dispatch = useDispatch();\r\n  const handleClick = async () => {\r\n    try {\r\n      await doLogin({ authParam, successFn, failFn, errorFn });\r\n      loginComplete();\r\n    } catch (error) {\r\n      console.log(error);\r\n      // navigate(-1);\r\n    }\r\n  };\r\n\r\n  const successFn = result => {\r\n    console.log(\"성공\", result);\r\n    moveToPath(\"/\");\r\n  };\r\n\r\n  const failFn = result => {\r\n    openModal(\"비밀번호 에러\", \"비밀번호를 확인해주세요.\", closeModal);\r\n    console.log(\"실패\", result);\r\n    // alert(\"이메일 및 비밀번호 확인하세요.\");\r\n  };\r\n\r\n  const errorFn = result => {\r\n    console.log(\"서버 에러\", result);\r\n    openModal(\"비밀번호 에러\", \"비밀번호를 확인해주세요.\", closeModal);\r\n  };\r\n  return (\r\n    <Layout>\r\n      {isModal.isOpen && (\r\n        <ResultModal\r\n          title={isModal.title}\r\n          content={isModal.content}\r\n          callFn={isModal.callFn}\r\n        />\r\n      )}\r\n      <LoginPageWrap>\r\n        <TitleHeader\r\n          timg=\"https://picsum.photos/1920/215/?category=meat\"\r\n          tname=\"로그인\"\r\n          tcontent=\"우울할 땐 고기 앞으로\"\r\n        ></TitleHeader>\r\n        <LoginPageMain>\r\n          <LoginPageInfo>\r\n            {/* 적는 란 */}\r\n            <LoginPageID\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={authParam.email}\r\n              placeholder=\"이메일\"\r\n              onChange={e => handleChange(e)}\r\n            />\r\n\r\n            <LoginPagePW\r\n              type=\"password\"\r\n              name=\"upw\"\r\n              value={authParam.upw}\r\n              placeholder=\"비밀번호\"\r\n              onChange={e => handleChange(e)}\r\n              maxLength=\"8\"\r\n            />\r\n          </LoginPageInfo>\r\n          <LoginPageCheckbox>\r\n            {/* <img src=\"../assets/images/Checkboxes.svg\"></img>\r\n            이메일 기억하기 */}\r\n          </LoginPageCheckbox>\r\n          <LoginPageBts>\r\n            <button\r\n              type=\"button\"\r\n              className=\"Loginbutton\"\r\n              onClick={() => {\r\n                handleClick();\r\n              }}\r\n            >\r\n              로그인\r\n            </button>\r\n            <button type=\"button\" className=\"Joinbutton\" onClick={() => {}}>\r\n              회원가입\r\n            </button>\r\n          </LoginPageBts>\r\n        </LoginPageMain>\r\n      </LoginPageWrap>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["TitleHeaderWrapper","styled","div","_templateObject","_taggedTemplateLiteral","TitleHeaderInfo","_templateObject2","TitleName","span","_templateObject3","FontSize","main_title","ColorStyle","grayScale","TitleContent","_templateObject4","sub_title","props","timg","tname","tcontent","_jsxs","children","_jsx","src","alt","LoginPageWrap","LoginPageMain","LoginPageInfo","LoginPageID","input","LoginPagePW","_templateObject5","LoginPageCheckbox","_templateObject6","LoginPageBts","_templateObject7","initState","email","upw","LoginPage","authParam","setAuthParam","useState","doLogin","moveToPath","loginComplete","useCustomLogin","isModal","openModal","closeModal","useCustomHook","handleChange","useNavigate","e","target","name","value","successFn","useDispatch","result","console","log","failFn","errorFn","Layout","isOpen","ResultModal","title","content","callFn","TitleHeader","type","placeholder","onChange","maxLength","className","onClick","async","error","handleClick"],"sourceRoot":""}