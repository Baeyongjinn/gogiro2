{"version":3,"file":"static/js/342.d73859f8.chunk.js","mappings":"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","sources":["api/GApi.js","components/util/utils.js","components/hooks/useCustomMove.js","pages/gogi/styles/GlistPageStyle.js","pages/gogi/GlistPage.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const API_SERVER_HOST = \"\";\r\nconst host = `${API_SERVER_HOST}/api`;\r\n\r\n//! GET Gogi List Page\r\nexport const getGList = async ({ param, successFn, failFn, errorFn }) => {\r\n  try {\r\n    const res = await axios.get(`${host}/shop`, { params: param });\r\n    const status = res.status.toString();\r\n    const httpSt = status.charAt(0).toString();\r\n    if (httpSt == 2) {\r\n      console.log(res.data);\r\n      successFn(res.data);\r\n    } else {\r\n      console.log(\"error\");\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const MeatMenu = async () => {\r\n  try {\r\n    const res = await axios.get(\"/json/menu.json\");\r\n    const status = res.status.toString();\r\n    const httpSt = status.charAt(0).toString();\r\n    if (httpSt == 2) {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"error\");\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const ReserPost = async () => {\r\n  try {\r\n    const res = await axios.post();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","export const getNum = (check, init) => {\r\n  if (!check) {\r\n    return init;\r\n  }\r\n  return check;\r\n};\r\n","import {\r\n  createSearchParams,\r\n  useNavigate,\r\n  useSearchParams,\r\n} from \"react-router-dom\";\r\nimport { getNum } from \"../util/utils\";\r\n\r\nconst useCustomMove = () => {\r\n  // path hook\r\n  const navigate = useNavigate();\r\n  // query 알아내기, 읽기\r\n  const [urlSearchParams, setUrlSearchPrams] = useSearchParams();\r\n  // 현재 page 번호\r\n  const page = urlSearchParams.get(\"page\")\r\n    ? parseInt(urlSearchParams.get(\"page\"))\r\n    : 1;\r\n  // 현재 search\r\n  const search = urlSearchParams.get(\"search\")\r\n    ? parseInt(urlSearchParams.get(\"search\"))\r\n    : \"\";\r\n  // querystring 만들기\r\n  const queryStrDefault = createSearchParams({ page, search }).toString();\r\n  // to list\r\n  const moveToList = pageParam => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, page);\r\n      // 쿼리 만들기\r\n      queryStr = createSearchParams({\r\n        page: pageNum,\r\n      }).toString();\r\n    } else {\r\n      queryStr = queryStrDefault;\r\n    }\r\n    navigate({ pathname: \"../list\", search: queryStr });\r\n  };\r\n  // to modify\r\n  const moveToModify = num => {\r\n    navigate({ pathname: `../modify/${num}`, search: queryStrDefault });\r\n  };\r\n  // to read\r\n  const moveToRead = num => {\r\n    navigate({ pathname: `../read/${num}`, search: queryStrDefault });\r\n  };\r\n  return { moveToList, moveToModify, moveToRead, page, search };\r\n};\r\n\r\nexport default useCustomMove;\r\n","import styled from \"@emotion/styled\";\r\nimport { ColorStyle, FontSize } from \"../../../styles/common/CommonStyle\";\r\n\r\nexport const KindOfMeatWrap = styled.div`\r\n  display: flex;\r\n  width: 1180px;\r\n  padding: 30px 0px;\r\n  align-items: flex-end;\r\n  gap: 100px;\r\n  margin: 30px 10px;\r\n`;\r\nexport const KindOfMeat = styled.div`\r\n  width: 70px;\r\n  height: 50px;\r\n  flex-shrink: 0;\r\n  img {\r\n    width: 70px;\r\n    height: 50px;\r\n  }\r\n  span {\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: ${FontSize.title};\r\n  }\r\n`;\r\nexport const SearchWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 3px;\r\n`;\r\nexport const SearchBar = styled.div`\r\n  display: flex;\r\n  height: 35px;\r\n  padding: 5px 20px;\r\n  align-items: center;\r\n  gap: 10px;\r\n  border: 1px solid var(--gray-scale-400, #a8a8a8);\r\n  background: #fff;\r\n`;\r\nexport const SearchInput = styled.input`\r\n  /* color: var(--gray-scale-500, #8f8f8f); */\r\n  /* Rugular 14 */\r\n  font-family: Pretendard;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 125%; /* 17.5px */\r\n  border: none;\r\n`;\r\nexport const SearchIconWrap = styled.div`\r\n  display: flex;\r\n  width: 35px;\r\n  height: 35px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: var(--gray-scale-400, #a8a8a8);\r\n  button {\r\n    width: 24px;\r\n    height: 24px;\r\n    flex-shrink: 0;\r\n  }\r\n`;\r\nexport const ListFilter = styled.div`\r\n  float: right;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 20px;\r\n`;\r\nexport const ListFilterItem = styled.button`\r\n  display: flex;\r\n  border: none;\r\n  background: transparent;\r\n  width: 50px;\r\n  height: 30px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  span {\r\n    color: ${props => (props.active ? ColorStyle.g1000 : ColorStyle.g500)};\r\n    text-align: center;\r\n    font-feature-settings: \"clig\" off, \"liga\" off;\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: 19px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 16px; /* 84.211% */\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\nexport const ListMoreViewBtnWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 30px;\r\n`;\r\nexport const ListMoreViewBtn = styled.button`\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n  border-radius: 10px;\r\n  border: 2px solid var(--sub, #066e52);\r\n  background: #fff;\r\n  span {\r\n    color: var(--primary, #d60117);\r\n    text-align: center;\r\n    font-family: DAEAM_LEE_TAE_JOON;\r\n    font-size: 19px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 125%; /* 23.75px */\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getGList } from \"../../api/GApi\";\r\nimport useCustomMove from \"../../components/hooks/useCustomMove\";\r\nimport {\r\n  KindOfMeat,\r\n  KindOfMeatWrap,\r\n  ListFilter,\r\n  ListFilterItem,\r\n  ListMoreViewBtn,\r\n  ListMoreViewBtnWrap,\r\n  SearchBar,\r\n  SearchIconWrap,\r\n  SearchInput,\r\n  SearchWrap,\r\n} from \"./styles/GlistPageStyle\";\r\n\r\n// 고깃집 목록보기 페이지입니다.\r\nconst GlistPage = () => {\r\n  // ! InitState (초기 상태)\r\n  const initState = {\r\n    ishop: 0,\r\n    name: \"\",\r\n    location: \"\",\r\n    pics: [\"\"],\r\n  };\r\n  const [selectFilter, setSelectFilter] = useState(\"lastest\");\r\n  const [GlistData, setGlistData] = useState(initState);\r\n  const { page } = useCustomMove();\r\n  useEffect(() => {\r\n    const param = { page };\r\n    getGList({ param, successFn, failFn, errorFn });\r\n  }, [page]);\r\n\r\n  const successFn = result => {\r\n    setGlistData(result);\r\n    console.log(result);\r\n  };\r\n  const failFn = result => {\r\n    console.log(result);\r\n  };\r\n  const errorFn = result => {\r\n    console.log(result);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <KindOfMeatWrap>\r\n        <KindOfMeat>\r\n          <span>전체</span>\r\n        </KindOfMeat>\r\n        <KindOfMeat>\r\n          <span>돼지</span>\r\n        </KindOfMeat>\r\n        <KindOfMeat>\r\n          <span>소</span>\r\n        </KindOfMeat>\r\n        <KindOfMeat>\r\n          <span>닭</span>\r\n        </KindOfMeat>\r\n        <KindOfMeat>\r\n          <span>오리</span>\r\n        </KindOfMeat>\r\n        <KindOfMeat>\r\n          <span>양</span>\r\n        </KindOfMeat>\r\n        <KindOfMeat>\r\n          <span>해산물</span>\r\n        </KindOfMeat>\r\n      </KindOfMeatWrap>\r\n      <SearchWrap>\r\n        <SearchBar>\r\n          <SearchInput placeholder=\"고깃집을 검색해보세요\" />\r\n        </SearchBar>\r\n        <SearchIconWrap>\r\n          <img\r\n            src={process.env.PUBLIC_URL + `/assets/images/search.svg`}\r\n            alt=\"\"\r\n          />\r\n        </SearchIconWrap>\r\n      </SearchWrap>\r\n\r\n      <ListFilter>\r\n        <ListFilterItem\r\n          onClick={() => setSelectFilter(\"lastest\")}\r\n          active={selectFilter === \"lastest\"}\r\n        >\r\n          <span>최신순</span>\r\n        </ListFilterItem>\r\n        <ListFilterItem\r\n          onClick={() => setSelectFilter(\"popularity\")}\r\n          active={selectFilter === \"popularity\"}\r\n        >\r\n          <span>인기순</span>\r\n        </ListFilterItem>\r\n      </ListFilter>\r\n      {/* <GCard data={GlistData} /> */}\r\n      {/* 공사중 지도 페이지 입니다. */}\r\n      <ListMoreViewBtnWrap>\r\n        <ListMoreViewBtn>\r\n          <span>작성완료</span>\r\n        </ListMoreViewBtn>\r\n      </ListMoreViewBtnWrap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlistPage;\r\n"],"names":["host","concat","getGList","async","param","successFn","failFn","errorFn","_ref","res","axios","get","params","status","toString","charAt","console","log","data","error","MeatMenu","useCustomMove","navigate","useNavigate","urlSearchParams","setUrlSearchPrams","useSearchParams","page","parseInt","search","queryStrDefault","createSearchParams","moveToList","pageParam","queryStr","pageNum","check","init","getNum","pathname","moveToModify","num","moveToRead","KindOfMeatWrap","styled","div","_templateObject","_taggedTemplateLiteral","KindOfMeat","_templateObject2","FontSize","title","SearchWrap","_templateObject3","SearchBar","_templateObject4","SearchInput","input","_templateObject5","SearchIconWrap","_templateObject6","ListFilter","_templateObject7","ListFilterItem","button","_templateObject8","props","active","ColorStyle","g1000","g500","ListMoreViewBtnWrap","_templateObject9","ListMoreViewBtn","_templateObject10","GlistPage","selectFilter","setSelectFilter","useState","GlistData","setGlistData","ishop","name","location","pics","useEffect","result","_jsxs","children","_jsx","placeholder","src","alt","onClick"],"sourceRoot":""}